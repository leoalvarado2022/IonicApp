{"version":3,"sources":["./src/app/home-page/planning/harvest-estimate/harvest-estimate-form/harvest-estimate-form.component.html","./src/app/home-page/planning/harvest-estimate/harvest-estimate.page.html","./src/app/home-page/planning/harvest-estimate/harvest-estimate-form/harvest-estimate-form.component.scss","./src/app/home-page/planning/harvest-estimate/harvest-estimate-form/harvest-estimate-form.component.ts","./src/app/home-page/planning/harvest-estimate/harvest-estimate.module.ts","./src/app/home-page/planning/harvest-estimate/harvest-estimate.page.scss","./src/app/home-page/planning/harvest-estimate/harvest-estimate.page.ts"],"names":[],"mappings":"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","file":"planning-harvest-estimate-harvest-estimate-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"closeModal()\\\" color=\\\"secondary\\\">\\r\\n        <ion-icon name=\\\"arrow-back\\\" slot=\\\"icon-only\\\" style=\\\"color:white;\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title> {{ harvestEstimate ? 'Ver' : 'Registrar'  }}  Estimacion</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"harvestForm\\\">\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">\\r\\n        Cantidad {{ showUnitName() | uppercase }}\\r\\n      </ion-label>\\r\\n      <ion-input [value]=\\\"harvestForm.get('quantity') .value | mask: 'separator'\\\" clearInput formControlName=\\\"quantity\\\" placeholder=\\\"Ingresar Cantidad\\\" type=\\\"tel\\\"></ion-input>\\r\\n      <ng-container *ngIf=\\\"harvestForm.get('quantity').dirty\\\">\\r\\n        <span *ngIf=\\\"harvestForm.get('quantity').hasError('required')\\\" class=\\\"errorMsg\\\">Ingrese Cantidad</span>\\r\\n        <span *ngIf=\\\"harvestForm.get('quantity').hasError('pattern')\\\" class=\\\"errorMsg\\\">Solo numeros</span>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">\\r\\n        Cantidad Diaria {{ showUnitName() | uppercase }}\\r\\n      </ion-label>\\r\\n      <ion-input [value]=\\\"harvestForm.get('dailyAmount') .value | mask: 'separator'\\\" clearInput formControlName=\\\"dailyAmount\\\" placeholder=\\\"Ingresar Cantidad Diaria\\\" type=\\\"tel\\\"></ion-input>\\r\\n      <ng-container *ngIf=\\\"harvestForm.get('dailyAmount').dirty\\\">\\r\\n        <span *ngIf=\\\"harvestForm.get('dailyAmount').hasError('required')\\\" class=\\\"errorMsg\\\">Ingrese cantidad diaria</span>\\r\\n        <span *ngIf=\\\"harvestForm.get('quantity').hasError('pattern')\\\" class=\\\"errorMsg\\\">Solo numeros</span>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list>\\r\\n      <ion-radio-group>\\r\\n        <ion-list-header>\\r\\n          <ion-label>Trabaja Festivos ?</ion-label>\\r\\n        </ion-list-header>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Si</ion-label>\\r\\n          <ion-radio (ionSelect)=\\\"workHolidaysEvent($event.detail.value)\\\" [checked]=\\\"harvestForm.get('workHolidays').value === 1\\\" [disabled]=\\\"isView\\\" slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>No</ion-label>\\r\\n          <ion-radio (ionSelect)=\\\"workHolidaysEvent($event.detail.value)\\\" [checked]=\\\"harvestForm.get('workHolidays').value === 0\\\" [disabled]=\\\"isView\\\" slot=\\\"start\\\" value=\\\"0\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n\\r\\n        <ng-container *ngIf=\\\"harvestForm.get('workHolidays').dirty && harvestForm.get('workHolidays').hasError('required')\\\">\\r\\n          <span class=\\\"errorMsg\\\">Indique si trabaja los feriados.</span>\\r\\n        </ng-container>\\r\\n      </ion-radio-group>\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Fecha Inicio</ion-label>\\r\\n      <ion-datetime [displayFormat]=\\\"dateFormat\\\" [max]=\\\"maxDate\\\" [pickerFormat]=\\\"dateFormat\\\" formControlName=\\\"startDate\\\" placeholder=\\\"Ingresar Fecha Inicio\\\"></ion-datetime>\\r\\n      <ng-container *ngIf=\\\"harvestForm.get('startDate').dirty && harvestForm.get('startDate').hasError('required')\\\">\\r\\n        <span class=\\\"errorMsg\\\">Ingrese fecha inicio</span>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Fecha Fin</ion-label>\\r\\n      <ion-input [value]=\\\" harvestForm.get('endDate').value\\\" disabled=\\\"true\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"fixed\\\">Plantas de Proceso</ion-label>\\r\\n      <ion-select [interfaceOptions]=\\\"processPlantAction\\\" [selectedText]=\\\"getSelectedProcessPlant()\\\" cancelText=\\\"Cancelar\\\" formControlName=\\\"processPlant\\\" interface=\\\"action-sheet\\\">\\r\\n        <ion-select-option *ngFor=\\\"let plant of processPlants\\\" [value]=\\\"plant.id\\\">\\r\\n          {{ plant.name }}\\r\\n        </ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"fixed\\\">Destino</ion-label>\\r\\n      <ion-select [interfaceOptions]=\\\"destinationAction\\\" [selectedText]=\\\"getSelectedDestination()\\\" cancelText=\\\"Cancelar\\\" formControlName=\\\"destination\\\" interface=\\\"action-sheet\\\">\\r\\n        <ion-select-option *ngFor=\\\"let destination of destinations\\\" [value]=\\\"destination.id\\\">\\r\\n          {{ destination.name }}\\r\\n        </ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n\\r\\n    <br><br>\\r\\n    <ng-container *ngIf=\\\"!harvestEstimate\\\">\\r\\n      <ion-button (click)=\\\"submit()\\\" [disabled]=\\\"harvestForm.invalid || isSaving\\\" color=\\\"primary\\\" expand=\\\"block\\\">\\r\\n        Guardar\\r\\n      </ion-button>\\r\\n    </ng-container>\\r\\n\\r\\n  </form>\\r\\n</ion-content>\\r\\n\"","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"background-color-header\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button class=\\\"white\\\" text=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"white\\\">\\r\\n      <strong>Estimación de Cosecha</strong>\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <app-notifications></app-notifications>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-searchbar placeholder=\\\"Buscar...\\\" (ionChange)=\\\"searchHarvest($event.target.value)\\\" (ionClear)=\\\"cancelSearch()\\\" animated class=\\\"production\\\" showCancelButton=\\\"never\\\"></ion-searchbar>\\r\\n\\r\\n<ion-content class=\\\"content\\\">\\r\\n\\r\\n  <ng-container *ngFor=\\\"let harvest of filteredHarvestEstimate ; let index =index\\\">\\r\\n    <div class=\\\"card-sli\\\">\\r\\n      <div class=\\\"card-sli-back\\\">\\r\\n        <app-harvest-estimate-item\\r\\n          (deleteHarvest)=\\\"deleteHarvest($event)\\\"\\r\\n          (harvestSelected)=\\\"viewHarvest($event)\\\"\\r\\n          [isOld]=\\\"index > 0\\\"\\r\\n          [item]=\\\"harvest\\\"\\r\\n          [slideDisabled]=\\\"false\\\">\\r\\n        </app-harvest-estimate-item>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container *ngIf=\\\"checkButton()\\\">\\r\\n    <ion-fab horizontal=\\\"end\\\" slot=\\\"fixed\\\" vertical=\\\"bottom\\\">\\r\\n      <ion-fab-button (click)=\\\"openForm()\\\" [disabled]=\\\"!costCenter || !isOnline\\\" color=\\\"warning\\\">\\r\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n      </ion-fab-button>\\r\\n    </ion-fab>\\r\\n  </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\"","export default \".errorMsg {\\n  color: red;\\n}\\n\\nion-item ion-label {\\n  min-width: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS1wYWdlL3BsYW5uaW5nL2hhcnZlc3QtZXN0aW1hdGUvaGFydmVzdC1lc3RpbWF0ZS1mb3JtL0Q6XFxucG1cXGZ4MTFfbW9iaWxlL3NyY1xcYXBwXFxob21lLXBhZ2VcXHBsYW5uaW5nXFxoYXJ2ZXN0LWVzdGltYXRlXFxoYXJ2ZXN0LWVzdGltYXRlLWZvcm1cXGhhcnZlc3QtZXN0aW1hdGUtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvaG9tZS1wYWdlL3BsYW5uaW5nL2hhcnZlc3QtZXN0aW1hdGUvaGFydmVzdC1lc3RpbWF0ZS1mb3JtL2hhcnZlc3QtZXN0aW1hdGUtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUNDRjs7QURHRTtFQUNFLGNBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9wbGFubmluZy9oYXJ2ZXN0LWVzdGltYXRlL2hhcnZlc3QtZXN0aW1hdGUtZm9ybS9oYXJ2ZXN0LWVzdGltYXRlLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3JNc2cge1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbmlvbi1pdGVtIHtcclxuICBpb24tbGFiZWwge1xyXG4gICAgbWluLXdpZHRoOiA1MCU7XHJcbiAgfVxyXG59XHJcbiIsIi5lcnJvck1zZyB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbmlvbi1pdGVtIGlvbi1sYWJlbCB7XG4gIG1pbi13aWR0aDogNTAlO1xufSJdfQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ModalController} from '@ionic/angular';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {CostCenter, EntityList, Generic, HarvestEstimate, Unit} from '@primetec/primetec-angular';\r\nimport {SyncService} from '../../../../shared/services/sync/sync.service';\r\nimport {ContractDetailService} from '../../services/contract-detail/contract-detail.service';\r\nimport * as moment from 'moment';\r\nimport {AuthService} from '../../../../shared/services/auth/auth.service';\r\nimport {ToastService} from '../../../../shared/services/toast/toast.service';\r\nimport {HttpService} from '../../../../shared/services/http/http.service';\r\nimport {LoaderService} from '../../../../shared/services/loader/loader.service';\r\nimport {debounceTime} from 'rxjs/operators';\r\nimport {StoreService} from '../../../../shared/services/store/store.service';\r\n\r\n@Component({\r\n  selector: 'app-harvest-estimate-form',\r\n  templateUrl: './harvest-estimate-form.component.html',\r\n  styleUrls: ['./harvest-estimate-form.component.scss']\r\n})\r\nexport class HarvestEstimateFormComponent implements OnInit {\r\n\r\n  @Input() costCenter: CostCenter;\r\n  @Input() harvestEstimate: HarvestEstimate;\r\n  @Input() isView: boolean;\r\n  @Input() previous: HarvestEstimate;\r\n\r\n  public readonly processPlantAction: any = {\r\n    header: 'Plantas de Proceso',\r\n    keyboardClose: false,\r\n    backdropDismiss: false\r\n  };\r\n\r\n  public readonly destinationAction: any = {\r\n    header: 'Destinos',\r\n    keyboardClose: false,\r\n    backdropDismiss: false\r\n  };\r\n\r\n  public readonly dateFormat = 'DD/MM/YYYY';\r\n  public readonly maxDate = '2030';\r\n  public harvestForm: FormGroup;\r\n  public units: Array<Unit> = [];\r\n  public processPlants: Array<EntityList> = [];\r\n  public destinations: Array<Generic> = [];\r\n\r\n  public isSaving = false;\r\n  public holidays: Array<any> = [];\r\n  private userCompany: any;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private formBuilder: FormBuilder,\r\n    private syncService: SyncService,\r\n    private contractDetailService: ContractDetailService,\r\n    private authService: AuthService,\r\n    private toastService: ToastService,\r\n    private httpService: HttpService,\r\n    private loaderService: LoaderService,\r\n    private storeService: StoreService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.holidays = this.storeService.getHolidays();\r\n    this.userCompany = this.storeService.getActiveCompany();\r\n\r\n    if (this.isView) {\r\n      this.harvestForm = this.formBuilder.group({\r\n        id: [this.harvestEstimate.id],\r\n        costCenter: [this.costCenter.id],\r\n        user: [this.userCompany.user],\r\n        unit: [this.costCenter.controlUnit],\r\n        quantity: [{value: this.harvestEstimate.quantity, disabled: true}],\r\n        dailyAmount: [{value: this.harvestEstimate.dailyAmount, disabled: true}],\r\n        workHolidays: [{value: this.harvestEstimate.workHolidays ? 1 : 0, disabled: true}],\r\n        startDate: [{value: moment.utc(this.harvestEstimate.startDate).format('YYYY-MM-DD'), disabled: true}],\r\n        endDate: [moment.utc(this.harvestEstimate.endDate).format('DD/MM/YYYY')],\r\n        processPlant: [{value: this.harvestEstimate ? this.harvestEstimate.processPlant : '', disabled: true}, Validators.required],\r\n        destination: [{value: this.harvestEstimate ? this.harvestEstimate.destination : '', disabled: true}, Validators.required]\r\n      });\r\n    } else {\r\n      this.harvestForm = this.formBuilder.group({\r\n        id: [0, Validators.required],\r\n        costCenter: [this.costCenter.id],\r\n        user: [this.userCompany.user, Validators.required],\r\n        unit: [this.costCenter.controlUnit, Validators.required],\r\n        quantity: [this.previous ? this.previous.quantity : '', [\r\n          Validators.required,\r\n          Validators.pattern(/^([0-9.])+$/),\r\n          Validators.min(1)\r\n        ]],\r\n        dailyAmount: [this.previous ? this.previous.dailyAmount : '', [\r\n          Validators.required,\r\n          Validators.pattern(/^([0-9.])+$/),\r\n          Validators.min(1)\r\n        ]],\r\n        workHolidays: [this.previous ? this.previous.workHolidays ? 1 : 0 : 0, Validators.required],\r\n        startDate: [this.previous ? moment(this.cleanDate(this.previous.startDate), 'YYYY-MM-DD').format('YYYY-MM-DD') : this.costCenter.harvestDate, Validators.required],\r\n        endDate: [this.previous ? moment(this.cleanDate(this.previous.endDate), 'YYYY-MM-DD').format('DD/MM/YYYY') : '', Validators.required],\r\n        processPlant: [this.previous ? this.previous.processPlant : '', Validators.required],\r\n        destination: [this.previous ? this.previous.destination : '', Validators.required]\r\n      });\r\n\r\n      this.harvestForm.valueChanges.pipe(\r\n        debounceTime(1000),\r\n      ).subscribe((data) => {\r\n        this.calculateEndDate();\r\n      });\r\n    }\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  /**\r\n   * closeModal\r\n   */\r\n  public closeModal = (status: boolean = false) => {\r\n    this.modalController.dismiss(status);\r\n  }\r\n\r\n  /**\r\n   * submit\r\n   */\r\n  public submit = () => {\r\n    if (this.harvestForm.valid && !this.isSaving) {\r\n\r\n      this.isSaving = true;\r\n      const estimation = Object.assign({}, this.harvestForm.value);\r\n      estimation.endDate = moment(estimation.endDate, 'DD/MM/YYYY').format('YYYY-MM-DD');\r\n      estimation.quantity = this.cleanParseNumber(estimation.quantity);\r\n      estimation.dailyAmount = this.cleanParseNumber(estimation.dailyAmount);\r\n\r\n      delete this.costCenter.active;\r\n      const data = {\r\n        costCenter: this.costCenter,\r\n        harvestEstimate: estimation\r\n      };\r\n\r\n      this.storeEstimation(data);\r\n    } else {\r\n      this.isSaving = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * showUnitName\r\n   */\r\n  public showUnitName = () => {\r\n    const find = this.units.find(item => item.id === this.costCenter.controlUnit);\r\n    return find ? find.code : 'N/A';\r\n  }\r\n\r\n  /**\r\n   * workHolidaysEvent\r\n   * @param event\r\n   */\r\n  public workHolidaysEvent = (value: string) => {\r\n    this.harvestForm.patchValue({\r\n      workHolidays: parseInt(value, 10)\r\n    });\r\n\r\n    this.harvestForm.updateValueAndValidity();\r\n  }\r\n\r\n  /**\r\n   * getSelectedProcessPlant\r\n   */\r\n  public getSelectedProcessPlant = () => {\r\n    if (this.processPlants) {\r\n      const id = this.harvestForm.get('processPlant').value;\r\n      const find = this.processPlants.find(item => item.id === id);\r\n      return find ? find.name : '';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * getSelectedDestination\r\n   */\r\n  public getSelectedDestination = () => {\r\n    if (this.destinations) {\r\n      const id = this.harvestForm.get('destination').value;\r\n      const find = this.destinations.find(item => item['id'] === id);\r\n      return find ? find['name'] : '';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * loadData\r\n   */\r\n  private loadData = () => {\r\n    this.units = this.storeService.getUnits();\r\n    this.processPlants = this.storeService.getProcessPlants();\r\n    this.destinations = this.storeService.getDestinations();\r\n\r\n    this.preSelectProcessPlant();\r\n    this.preSelectDestination();\r\n  }\r\n\r\n  /**\r\n   * storeEstimation\r\n   * @param data\r\n   */\r\n  private storeEstimation = (data: any) => {\r\n    this.loaderService.startLoader('Guardando estimacion...');\r\n    this.contractDetailService.storeHarvest(data).subscribe(success => {\r\n      this.loaderService.stopLoader();\r\n      this.isSaving = false;\r\n      this.closeModal(true);\r\n    }, error => {\r\n      this.loaderService.stopLoader();\r\n      this.isSaving = false;\r\n      this.httpService.errorHandler(error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * calculateEndDate\r\n   */\r\n  private calculateEndDate = () => {\r\n    const {\r\n      quantity,\r\n      dailyAmount,\r\n      workHolidays,\r\n      startDate\r\n    } = this.harvestForm.value;\r\n\r\n    if (quantity && dailyAmount) {\r\n      const days = Math.ceil((this.cleanParseNumber(quantity) > 0 ? this.cleanParseNumber(quantity) : 1) / (this.cleanParseNumber(dailyAmount) > 0 ? this.cleanParseNumber(dailyAmount) : 1));\r\n      const holidays = [];\r\n      const daysAdded = 1;\r\n      let momentDate = moment.utc(startDate);\r\n\r\n      if (workHolidays === 0) {\r\n        this.holidays.forEach(holiday => {\r\n          holidays.push(moment.utc(holiday.fecha).format(this.dateFormat));\r\n        });\r\n      }\r\n\r\n      momentDate = this.computeEndDate(days, daysAdded, momentDate, holidays);\r\n\r\n      this.harvestForm.patchValue({\r\n        endDate: momentDate.format(this.dateFormat)\r\n      });\r\n\r\n      this.harvestForm.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * cleanDate\r\n   * @param date\r\n   */\r\n  private cleanDate = (date: string) => {\r\n    if (date.includes('T')) {\r\n      return date.split('T')[0];\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  /**\r\n   * computeEndDate\r\n   * @param workingDays\r\n   * @param daysAdded\r\n   * @param momentDate\r\n   */\r\n  private computeEndDate = (workingDays: number = 1, daysAdded: number = 1, momentDate: any, holidays: Array<any> = []) => {\r\n    if (workingDays > daysAdded && daysAdded < 60) {\r\n      if (momentDate.weekday() > 0 && !holidays.includes(momentDate.format(this.dateFormat))) {\r\n        daysAdded++;\r\n      }\r\n\r\n      momentDate = momentDate.add(1, 'days');\r\n      return this.computeEndDate(workingDays, daysAdded, momentDate, holidays);\r\n    }\r\n\r\n    return momentDate;\r\n  }\r\n\r\n  /**\r\n   * cleanParseNumber\r\n   * @param value\r\n   */\r\n  private cleanParseNumber = (value: string): number => {\r\n    return parseInt(String(value).replace('.', ''), 10);\r\n  }\r\n\r\n  /**\r\n   * preSelectProcessPlant\r\n   */\r\n  private preSelectProcessPlant = () => {\r\n    if (this.processPlants.length === 1) {\r\n      this.harvestForm.patchValue({\r\n        processPlant: this.processPlants[0].id\r\n      });\r\n\r\n      this.harvestForm.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * preSelectDestination\r\n   */\r\n  private preSelectDestination = () => {\r\n    if (this.destinations.length === 1) {\r\n      this.harvestForm.patchValue({\r\n        destination: this.destinations[0].id\r\n      });\r\n\r\n      this.harvestForm.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HarvestEstimatePage} from './harvest-estimate.page';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {HarvestEstimateFormComponent} from './harvest-estimate-form/harvest-estimate-form.component';\r\nimport {NgxMaskModule} from 'ngx-mask';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HarvestEstimatePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routes),\r\n    NgxMaskModule\r\n  ],\r\n  declarations: [\r\n    HarvestEstimatePage,\r\n    HarvestEstimateFormComponent\r\n  ],\r\n  entryComponents: [\r\n    HarvestEstimateFormComponent\r\n  ]\r\n})\r\nexport class HarvestEstimatePageModule {\r\n\r\n}\r\n","export default \".card-content {\\n  margin-bottom: 5px;\\n}\\n.card-content .estimate-content {\\n  display: table;\\n  width: 100%;\\n}\\n.card-content .estimate-content.old .card {\\n  background: var(--color-box-light) !important;\\n}\\n.card-content .estimate-content .card {\\n  display: table-cell;\\n  text-align: center;\\n  width: 33.3%;\\n  padding: 5px;\\n  background: white;\\n}\\n.card-content .estimate-content .card p {\\n  margin: 0;\\n}\\n.card-content .estimate-content .card p:nth-child(1) {\\n  font-size: 10px;\\n  color: var(--ion-color-medium-shade);\\n}\\n.card-content .estimate-content .card p:nth-child(2) {\\n  font-size: 14px;\\n}\\n.card-content .update-card {\\n  background: var(--color-login-header);\\n  width: 100%;\\n}\\n.card-content .update-card.old {\\n  background: white !important;\\n  height: 16px;\\n  padding: 0 5px;\\n}\\n.card-content .update-card.old p {\\n  color: var(--ion-color-light-shade) !important;\\n}\\n.card-content .update-card p {\\n  color: white;\\n  margin: 0;\\n  font-size: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS1wYWdlL3BsYW5uaW5nL2hhcnZlc3QtZXN0aW1hdGUvRDpcXG5wbVxcZngxMV9tb2JpbGUvc3JjXFxhcHBcXGhvbWUtcGFnZVxccGxhbm5pbmdcXGhhcnZlc3QtZXN0aW1hdGVcXGhhcnZlc3QtZXN0aW1hdGUucGFnZS5zY3NzIiwic3JjL2FwcC9ob21lLXBhZ2UvcGxhbm5pbmcvaGFydmVzdC1lc3RpbWF0ZS9oYXJ2ZXN0LWVzdGltYXRlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGtCQUFBO0FDQUY7QURFRTtFQUNFLGNBQUE7RUFDQSxXQUFBO0FDQUo7QURHTTtFQUNFLDZDQUFBO0FDRFI7QURLSTtFQUNFLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBRUEsWUFBQTtFQUNBLGlCQUFBO0FDSk47QURNTTtFQUNFLFNBQUE7QUNKUjtBRE1RO0VBQ0UsZUFBQTtFQUNBLG9DQUFBO0FDSlY7QURPUTtFQUNFLGVBQUE7QUNMVjtBRFdFO0VBV0UscUNBQUE7RUFDQSxXQUFBO0FDbkJKO0FEUUk7RUFDRSw0QkFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDTk47QURRTTtFQUNFLDhDQUFBO0FDTlI7QURhSTtFQUNFLFlBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtBQ1hOIiwiZmlsZSI6InNyYy9hcHAvaG9tZS1wYWdlL3BsYW5uaW5nL2hhcnZlc3QtZXN0aW1hdGUvaGFydmVzdC1lc3RpbWF0ZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmNhcmQtY29udGVudCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG5cclxuICAuZXN0aW1hdGUtY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICYub2xkIHtcclxuICAgICAgLmNhcmQge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLWJveC1saWdodCkgIWltcG9ydGFudDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5jYXJkIHtcclxuICAgICAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICB3aWR0aDogMzMuMyU7XHJcbiAgICAgIC8vYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3ItbG9naW4taGVhZGVyKTtcclxuICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuXHJcbiAgICAgIHAge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAgICAgJjpudGgtY2hpbGQoMSkge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0tc2hhZGUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnVwZGF0ZS1jYXJkIHtcclxuICAgICYub2xkIHtcclxuICAgICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcclxuICAgICAgaGVpZ2h0OiAxNnB4O1xyXG4gICAgICBwYWRkaW5nOiAwIDVweDtcclxuXHJcbiAgICAgIHAge1xyXG4gICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHQtc2hhZGUpICFpbXBvcnRhbnQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1sb2dpbi1oZWFkZXIpO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgcCB7XHJcbiAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICBmb250LXNpemU6IDEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5jYXJkLWNvbnRlbnQge1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG4uY2FyZC1jb250ZW50IC5lc3RpbWF0ZS1jb250ZW50IHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmNhcmQtY29udGVudCAuZXN0aW1hdGUtY29udGVudC5vbGQgLmNhcmQge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1ib3gtbGlnaHQpICFpbXBvcnRhbnQ7XG59XG4uY2FyZC1jb250ZW50IC5lc3RpbWF0ZS1jb250ZW50IC5jYXJkIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMzMuMyU7XG4gIHBhZGRpbmc6IDVweDtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG4uY2FyZC1jb250ZW50IC5lc3RpbWF0ZS1jb250ZW50IC5jYXJkIHAge1xuICBtYXJnaW46IDA7XG59XG4uY2FyZC1jb250ZW50IC5lc3RpbWF0ZS1jb250ZW50IC5jYXJkIHA6bnRoLWNoaWxkKDEpIHtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bS1zaGFkZSk7XG59XG4uY2FyZC1jb250ZW50IC5lc3RpbWF0ZS1jb250ZW50IC5jYXJkIHA6bnRoLWNoaWxkKDIpIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLmNhcmQtY29udGVudCAudXBkYXRlLWNhcmQge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1sb2dpbi1oZWFkZXIpO1xuICB3aWR0aDogMTAwJTtcbn1cbi5jYXJkLWNvbnRlbnQgLnVwZGF0ZS1jYXJkLm9sZCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMTZweDtcbiAgcGFkZGluZzogMCA1cHg7XG59XG4uY2FyZC1jb250ZW50IC51cGRhdGUtY2FyZC5vbGQgcCB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHQtc2hhZGUpICFpbXBvcnRhbnQ7XG59XG4uY2FyZC1jb250ZW50IC51cGRhdGUtY2FyZCBwIHtcbiAgY29sb3I6IHdoaXRlO1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn0iXX0= */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {ModalController} from '@ionic/angular';\r\nimport {HarvestEstimateFormComponent} from './harvest-estimate-form/harvest-estimate-form.component';\r\nimport {CostCenter, HarvestEstimate} from '@primetec/primetec-angular';\r\nimport {ContractDetailService} from '../services/contract-detail/contract-detail.service';\r\nimport {HttpService} from '../../../shared/services/http/http.service';\r\nimport {LoaderService} from '../../../shared/services/loader/loader.service';\r\nimport {AlertService} from '../../../shared/services/alert/alert.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {NetworkService} from '../../../shared/services/network/network.service';\r\nimport {StoreService} from '../../../shared/services/store/store.service';\r\n\r\n@Component({\r\n  selector: 'app-harvest-estimate',\r\n  templateUrl: './harvest-estimate.page.html',\r\n  styleUrls: ['./harvest-estimate.page.scss'],\r\n})\r\nexport class HarvestEstimatePage implements OnInit, OnDestroy {\r\n\r\n  public costCenter: CostCenter;\r\n  public filteredHarvestEstimate: Array<HarvestEstimate>;\r\n  public isOnline: boolean;\r\n  private harvestEstimate: Array<HarvestEstimate>;\r\n  private currentUrl: string;\r\n  private isOnline$: Subscription;\r\n  private router$: Subscription;\r\n  private store$: Subscription;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private modalController: ModalController,\r\n    private contractDetailService: ContractDetailService,\r\n    private alertService: AlertService,\r\n    private httpService: HttpService,\r\n    private loaderService: LoaderService,\r\n    private networkService: NetworkService,\r\n    private storeService: StoreService\r\n  ) {\r\n    this.isOnline$ = this.networkService.getNetworkStatus().subscribe(status => {\r\n      this.isOnline = status;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.router$ = this.router.events.subscribe((route) => {\r\n      if (route instanceof NavigationEnd) {\r\n        this.currentUrl = route.url;\r\n      }\r\n    });\r\n\r\n    this.store$ = this.storeService.stateChanged.subscribe(data => {\r\n      this.costCenter = this.storeService.getCostCenter();\r\n      this.harvestEstimate = this.storeService.getHarvestEstimate();\r\n      this.filteredHarvestEstimate = this.storeService.getHarvestEstimate();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isOnline$.unsubscribe();\r\n    this.router$.unsubscribe();\r\n    this.store$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * checkButton\r\n   */\r\n  public checkButton = () => {\r\n    return this.currentUrl === '/home-page/harvest-estimate';\r\n  }\r\n\r\n  /**\r\n   * openForm\r\n   */\r\n  public openForm = async (harvestEstimate: HarvestEstimate = null) => {\r\n    const modal = await this.modalController.create({\r\n      component: HarvestEstimateFormComponent,\r\n      componentProps: {\r\n        costCenter: this.costCenter,\r\n        harvestEstimate,\r\n        isView: harvestEstimate !== null,\r\n        previous: this.harvestEstimate.length > 0 ? this.harvestEstimate[0] : null\r\n      },\r\n      backdropDismiss: false,\r\n      keyboardClose: false,\r\n      cssClass: 'full-screen-modal'\r\n    });\r\n\r\n    modal.onDidDismiss().then((data) => {\r\n      if (data.data) {\r\n        this.reloadList();\r\n      }\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n  /**\r\n   * searchHarvest\r\n   * @param search\r\n   */\r\n  public searchHarvest = (search: string) => {\r\n    if (search) {\r\n      this.filteredHarvestEstimate = this.harvestEstimate.filter(item => {\r\n        return (\r\n          item.userName.toLowerCase().includes(search.toLowerCase()) ||\r\n          item.quantity === parseInt(search, 10)\r\n        );\r\n      });\r\n    } else {\r\n      this.filteredHarvestEstimate = this.harvestEstimate;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * cancelSearch\r\n   */\r\n  public cancelSearch = () => {\r\n    this.filteredHarvestEstimate = this.harvestEstimate;\r\n  }\r\n\r\n  /**\r\n   * harvestSelected\r\n   * @param item\r\n   */\r\n  public viewHarvest = async (harvestEstimate: HarvestEstimate) => {\r\n    await this.openForm(harvestEstimate);\r\n  }\r\n\r\n  /**\r\n   * deleteHarvest\r\n   * @param harvestEstimate\r\n   */\r\n  public deleteHarvest = async (harvestEstimate: HarvestEstimate) => {\r\n    const respuesta = await this.alertService.confirmAlert('Desea borrar esta estimacion de cosecha?');\r\n\r\n    if (respuesta) {\r\n      const newHarvest = Object.assign({}, harvestEstimate, {\r\n        id: -harvestEstimate.id,\r\n        workHolidays: harvestEstimate ? 1 : 0\r\n      });\r\n      delete this.costCenter.active;\r\n      const data = {\r\n        costCenter: this.costCenter,\r\n        harvestEstimate: newHarvest\r\n      };\r\n\r\n      this.storeEstimation(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * reloadList\r\n   */\r\n  public reloadList = () => {\r\n    this.loaderService.startLoader();\r\n    this.contractDetailService.getCostCenterDetail(this.costCenter.id.toString()).subscribe((success: any) => {\r\n      this.storeService.setContractData(success.data);\r\n      this.loaderService.stopLoader();\r\n    }, error => {\r\n      this.loaderService.stopLoader();\r\n      this.httpService.errorHandler(error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * storeEstimation\r\n   * @param data\r\n   */\r\n  private storeEstimation = (data: any) => {\r\n    this.loaderService.startLoader('Borrando estimacion de cosecha');\r\n    this.contractDetailService.storeHarvest(data).subscribe(success => {\r\n      this.reloadList();\r\n      this.loaderService.stopLoader();\r\n    }, error => {\r\n      this.loaderService.stopLoader();\r\n      this.httpService.errorHandler(error);\r\n    });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}