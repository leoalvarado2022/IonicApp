{"version":3,"sources":["./src/app/home-page/planning/quality-estimate/quality-estimate-form/quality-estimate-form.component.html","./src/app/home-page/planning/quality-estimate/quality-estimate.page.html","./src/app/home-page/planning/quality-estimate/quality-estimate-form/quality-estimate-form.component.scss","./src/app/home-page/planning/quality-estimate/quality-estimate-form/quality-estimate-form.component.ts","./src/app/home-page/planning/quality-estimate/quality-estimate.module.ts","./src/app/home-page/planning/quality-estimate/quality-estimate.page.scss","./src/app/home-page/planning/quality-estimate/quality-estimate.page.ts"],"names":[],"mappings":"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","file":"planning-quality-estimate-quality-estimate-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"closeModal()\\\" color=\\\"secondary\\\">\\r\\n        <ion-icon name=\\\"arrow-back\\\" slot=\\\"icon-only\\\" style=\\\"color:white;\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{ qualityEstimate ? 'Ver' : 'Registrar' }} Calidad</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"qualityForm\\\">\\r\\n    <ng-container formGroupName=\\\"quality\\\">\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"fixed\\\">Calidad</ion-label>\\r\\n        <ion-select [interfaceOptions]=\\\"customActionSheetOptions\\\" [selectedText]=\\\"getSelectedQuality()\\\" cancelText=\\\"Cancelar\\\" formControlName=\\\"quality\\\" interface=\\\"action-sheet\\\">\\r\\n          <ion-select-option *ngFor=\\\"let q of qualities\\\" [value]=\\\"q.id\\\">\\r\\n            {{ q.name }}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n      <ng-container *ngIf=\\\"qualityForm.get(['quality', 'quality']).hasError('required')\\\">\\r\\n        <span class=\\\"errorMsg\\\">Seleccione la Calidad</span>\\r\\n      </ng-container>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"fixed\\\">% de Exportación</ion-label>\\r\\n        <ion-input clearInput formControlName=\\\"exportPercentage\\\" placeholder=\\\"Ingrese el %\\\" type=\\\"number\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ng-container *ngIf=\\\"qualityForm.get(['quality', 'exportPercentage']).hasError('max')\\\">\\r\\n        <span class=\\\"errorMsg\\\">El porcentaje maximo es 100</span>\\r\\n      </ng-container>\\r\\n      <ng-container *ngIf=\\\"qualityForm.get(['quality', 'exportPercentage']).hasError('min')\\\">\\r\\n        <span class=\\\"errorMsg\\\">El porcentaje minimo es 0</span>\\r\\n      </ng-container>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container formArrayName=\\\"calibers\\\">\\r\\n      <ion-list>\\r\\n        <ion-list-header>\\r\\n          Datos Calibres\\r\\n        </ion-list-header>\\r\\n\\r\\n        <ng-container *ngFor=\\\"let item of qualityForm.get('calibers')['controls']; let index = index\\\" [formGroupName]=\\\"index.toString()\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"fixed\\\">{{ getCaliberName(item) }}</ion-label>\\r\\n            <ion-input clearInput formControlName=\\\"percentage\\\" placeholder=\\\"Ingrese el %\\\" type=\\\"number\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ng-container *ngIf=\\\"item.get('percentage').hasError('max')\\\">\\r\\n            <span class=\\\"errorMsg\\\">El porcentaje maximo es 100</span>\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"item.get('percentage').hasError('min')\\\">\\r\\n            <span class=\\\"errorMsg\\\">El porcentaje minimo es 0</span>\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"fixed\\\">Total</ion-label>\\r\\n          <ion-input [disabled]=\\\"isView\\\" [ngClass]=\\\"{ 'total-padding': !isView }\\\" [value]=\\\"getTotal()\\\" clearInput readonly=\\\"true\\\" type=\\\"number\\\"></ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <ng-container *ngIf=\\\"!isView && qualityForm.hasError('wrongPercentage')\\\">\\r\\n          <span class=\\\"errorMsg\\\">El porcentaje total debe sumar 100%</span>\\r\\n        </ng-container>\\r\\n\\r\\n      </ion-list>\\r\\n    </ng-container>\\r\\n\\r\\n    <br><br>\\r\\n    <ng-container *ngIf=\\\"!qualityEstimate\\\">\\r\\n      <ion-button (click)=\\\"submit()\\\" [disabled]=\\\"qualityForm.invalid || isSaving\\\" color=\\\"primary\\\" expand=\\\"block\\\">\\r\\n        Guardar\\r\\n      </ion-button>\\r\\n    </ng-container>\\r\\n\\r\\n  </form>\\r\\n</ion-content>\\r\\n\"","export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"background-color-header\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button class=\\\"white\\\" text=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"white\\\">\\r\\n      <strong>Estimación de Calidad</strong>\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <app-notifications></app-notifications>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-searchbar\\r\\n  placeholder=\\\"Buscar...\\\"\\r\\n  (ionChange)=\\\"searchQuality($event.target.value)\\\"\\r\\n  (ionClear)=\\\"cancelSearch()\\\"\\r\\n  animated\\r\\n  class=\\\"production\\\"\\r\\n  showCancelButton=\\\"never\\\">\\r\\n</ion-searchbar>\\r\\n\\r\\n<ion-content class=\\\"content\\\">\\r\\n\\r\\n  <ng-container *ngFor=\\\"let quality of filteredQualityEstimate; let index = index\\\">\\r\\n    <div class=\\\"card-sli\\\">\\r\\n      <div class=\\\"card-sli-back\\\">\\r\\n        <app-quality-estimate-item\\r\\n          (itemDelete)=\\\"deleteQuality(quality)\\\"\\r\\n          (itemSelected)=\\\"viewQuality(quality)\\\"\\r\\n          [costCenter]=\\\"costCenter\\\"\\r\\n          [details]=\\\"getItemDetails(quality.id)\\\"\\r\\n          [isOld]=\\\"index > 0 \\\"\\r\\n          [item]=\\\"quality\\\"\\r\\n          [slideDisabled]=\\\"false\\\">\\r\\n        </app-quality-estimate-item>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container *ngIf=\\\"checkButton()\\\">\\r\\n    <ion-fab horizontal=\\\"end\\\" slot=\\\"fixed\\\" vertical=\\\"bottom\\\">\\r\\n      <ion-fab-button (click)=\\\"openForm()\\\" [disabled]=\\\"!costCenter || !isOnline\\\" color=\\\"success\\\">\\r\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n      </ion-fab-button>\\r\\n    </ion-fab>\\r\\n  </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\"","export default \".errorMsg {\\n  color: red;\\n  padding-left: 15px;\\n}\\n\\nion-item ion-label {\\n  min-width: 50%;\\n}\\n\\nion-item ion-input {\\n  text-align: right;\\n}\\n\\n.total-padding {\\n  --padding-end: 37px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS1wYWdlL3BsYW5uaW5nL3F1YWxpdHktZXN0aW1hdGUvcXVhbGl0eS1lc3RpbWF0ZS1mb3JtL0Q6XFxucG1cXGZ4MTFfbW9iaWxlL3NyY1xcYXBwXFxob21lLXBhZ2VcXHBsYW5uaW5nXFxxdWFsaXR5LWVzdGltYXRlXFxxdWFsaXR5LWVzdGltYXRlLWZvcm1cXHF1YWxpdHktZXN0aW1hdGUtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvaG9tZS1wYWdlL3BsYW5uaW5nL3F1YWxpdHktZXN0aW1hdGUvcXVhbGl0eS1lc3RpbWF0ZS1mb3JtL3F1YWxpdHktZXN0aW1hdGUtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREdFO0VBQ0UsY0FBQTtBQ0FKOztBREdFO0VBQ0UsaUJBQUE7QUNESjs7QURLQTtFQUNFLG1CQUFBO0FDRkYiLCJmaWxlIjoic3JjL2FwcC9ob21lLXBhZ2UvcGxhbm5pbmcvcXVhbGl0eS1lc3RpbWF0ZS9xdWFsaXR5LWVzdGltYXRlLWZvcm0vcXVhbGl0eS1lc3RpbWF0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yTXNnIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIHBhZGRpbmctbGVmdDogMTVweDtcclxufVxyXG5cclxuaW9uLWl0ZW0ge1xyXG4gIGlvbi1sYWJlbCB7XHJcbiAgICBtaW4td2lkdGg6IDUwJTtcclxuICB9XHJcblxyXG4gIGlvbi1pbnB1dCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB9XHJcbn1cclxuXHJcbi50b3RhbC1wYWRkaW5nIHtcclxuICAtLXBhZGRpbmctZW5kOiAzN3B4O1xyXG59XHJcbiIsIi5lcnJvck1zZyB7XG4gIGNvbG9yOiByZWQ7XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbn1cblxuaW9uLWl0ZW0gaW9uLWxhYmVsIHtcbiAgbWluLXdpZHRoOiA1MCU7XG59XG5pb24taXRlbSBpb24taW5wdXQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLnRvdGFsLXBhZGRpbmcge1xuICAtLXBhZGRpbmctZW5kOiAzN3B4O1xufSJdfQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Caliber, CostCenter, Generic, QualityDetail, QualityEstimate} from '@primetec/primetec-angular';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ModalController} from '@ionic/angular';\r\nimport {AuthService} from '../../../../shared/services/auth/auth.service';\r\nimport {ContractDetailService} from '../../services/contract-detail/contract-detail.service';\r\nimport {SyncService} from '../../../../shared/services/sync/sync.service';\r\nimport {ToastService} from '../../../../shared/services/toast/toast.service';\r\nimport {HttpService} from '../../../../shared/services/http/http.service';\r\nimport {LoaderService} from '../../../../shared/services/loader/loader.service';\r\nimport {StoreService} from '../../../../shared/services/store/store.service';\r\n\r\n@Component({\r\n  selector: 'app-quality-estimate-form',\r\n  templateUrl: './quality-estimate-form.component.html',\r\n  styleUrls: ['./quality-estimate-form.component.scss'],\r\n})\r\nexport class QualityEstimateFormComponent implements OnInit {\r\n\r\n  @Input() costCenter: CostCenter;\r\n  @Input() qualityEstimate: QualityEstimate;\r\n  @Input() qualityEstimateDetail: Array<QualityDetail>;\r\n  @Input() isView: boolean;\r\n  @Input() previous: QualityEstimate;\r\n\r\n  public readonly customActionSheetOptions: any = {\r\n    header: 'Calidades',\r\n    keyboardClose: false,\r\n    backdropDismiss: false\r\n  };\r\n\r\n  public qualityForm: FormGroup;\r\n  public isSaving = false;\r\n  public qualities: Array<Generic>;\r\n  private userCompany: any;\r\n  private calibers: Array<Caliber>;\r\n  private filteredCalibers: Array<Caliber>;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private contractDetailService: ContractDetailService,\r\n    private syncService: SyncService,\r\n    private toastService: ToastService,\r\n    private httpService: HttpService,\r\n    private loaderService: LoaderService,\r\n    private storeService: StoreService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userCompany = this.storeService.getActiveCompany();\r\n    if (this.isView) {\r\n      this.qualityForm = this.formBuilder.group({\r\n        quality: this.formBuilder.group({\r\n          id: [this.qualityEstimate.id, Validators.required],\r\n          costCenter: [this.costCenter.id, Validators.required],\r\n          user: [this.userCompany.user, Validators.required],\r\n          quality: [{value: this.qualityEstimate.quality, disabled: true}, Validators.required],\r\n          exportPercentage: [{value: this.qualityEstimate.exportPercentage, disabled: true}, [\r\n            Validators.required,\r\n            Validators.max(100),\r\n            Validators.min(0)\r\n          ]],\r\n          temp: [1]\r\n        }),\r\n        calibers: this.formBuilder.array([])\r\n      }, {validator: this.validateCalibers});\r\n    } else {\r\n      this.qualityForm = this.formBuilder.group({\r\n        quality: this.formBuilder.group({\r\n          id: [0, Validators.required],\r\n          costCenter: [this.costCenter.id, Validators.required],\r\n          user: [this.userCompany.user, Validators.required],\r\n          quality: [this.previous ? this.previous.quality : '', Validators.required],\r\n          exportPercentage: [this.previous ? this.previous.exportPercentage : '', [\r\n            Validators.required,\r\n            Validators.max(100),\r\n            Validators.min(0)\r\n          ]],\r\n          temp: [1]\r\n        }),\r\n        calibers: this.formBuilder.array([])\r\n      }, {validator: this.validateCalibers});\r\n    }\r\n\r\n    this.loadCalibers();\r\n  }\r\n\r\n  /**\r\n   * closeModal\r\n   */\r\n  public closeModal = (status: boolean = false) => {\r\n    this.qualityForm.reset();\r\n    this.modalController.dismiss(status);\r\n  }\r\n\r\n  /**\r\n   * submit\r\n   */\r\n  public submit = () => {\r\n    if (this.qualityForm.valid && !this.isSaving) {\r\n      this.isSaving = true;\r\n      delete this.costCenter.active;\r\n\r\n      const data = Object.assign({}, this.qualityForm.value, {\r\n        costCenter: this.costCenter\r\n      });\r\n\r\n      data.calibers = data.calibers.map(caliber => Object.assign({}, caliber, {\r\n        percentage: caliber.percentage === '' ? 0 : caliber.percentage\r\n      })).filter(caliber => caliber.percentage > 0);\r\n\r\n      this.storeQuality(data);\r\n    } else {\r\n      this.isSaving = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * getCaliberName\r\n   * @param item\r\n   */\r\n  public getCaliberName = (item: any) => {\r\n    const caliber = this.calibers.find((caliber: Caliber) => caliber.id === item.get('caliber').value);\r\n    return caliber ? caliber.name : 'NOMBRE CALIBRE';\r\n  }\r\n\r\n  /**\r\n   * validateCalibers\r\n   * @param form\r\n   */\r\n  public validateCalibers = (form: FormGroup) => {\r\n    const items = form.get('calibers') as FormArray;\r\n\r\n    let accum = 0;\r\n    for (const item of items.controls) {\r\n      const percentage = item.get('percentage').value ? item.get('percentage').value : 0;\r\n      if (percentage) {\r\n        accum = accum + percentage;\r\n      }\r\n    }\r\n\r\n    return accum < 100 || accum > 100 ? {wrongPercentage: true} : null;\r\n  }\r\n\r\n  /**\r\n   * getTotal\r\n   */\r\n  public getTotal = () => {\r\n    const items = this.qualityForm.get('calibers') as FormArray;\r\n\r\n    let accum = 0;\r\n    for (const item of items.controls) {\r\n      const percentage = item.get('percentage').value ? item.get('percentage').value : 0;\r\n      if (percentage && percentage > 0) {\r\n        accum = accum + percentage;\r\n      }\r\n    }\r\n\r\n    return accum;\r\n  }\r\n\r\n  /**\r\n   * getSelectedQuality\r\n   */\r\n  public getSelectedQuality = () => {\r\n    if (this.qualities) {\r\n      const id = this.qualityForm.get('quality.quality').value;\r\n      const find = this.qualities.find(item => item.id === id);\r\n      return find ? find.name : '';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * loadCalibers\r\n   */\r\n  private loadCalibers = () => {\r\n    this.calibers = this.storeService.getCalibers();\r\n    this.qualities = this.storeService.getQualities();\r\n    this.filteredCalibers = this.calibers.filter((item: any) => item.species === this.costCenter.species);\r\n\r\n    const items = this.qualityForm.get('calibers') as FormArray;\r\n\r\n    for (const item of this.filteredCalibers) {\r\n      let find = null;\r\n      if (this.qualityEstimateDetail) {\r\n        find = this.qualityEstimateDetail.find(detail => detail.caliber === item.id);\r\n      }\r\n\r\n      const newCaliber = this.formBuilder.group({\r\n        id: [find ? find.id : 0, Validators.required],\r\n        quality: [find ? find.qualityEstimate : 0, Validators.required],\r\n        caliber: [item.id, Validators.required],\r\n        percentage: [{value: find ? find.value : '', disabled: this.isView}, [\r\n          Validators.max(100),\r\n          Validators.min(0)\r\n        ]],\r\n        temp: [1]\r\n      });\r\n      items.push(newCaliber);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * storeQuality\r\n   * @param data\r\n   */\r\n  private storeQuality(data: any) {\r\n    this.loaderService.startLoader('Guardando estimacion...');\r\n    this.contractDetailService.storeQuality(data).subscribe(success => {\r\n      this.isSaving = false;\r\n      this.loaderService.stopLoader();\r\n      this.closeModal(true);\r\n    }, error => {\r\n      this.isSaving = false;\r\n      this.loaderService.stopLoader();\r\n      this.httpService.errorHandler(error);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {QualityEstimatePage} from './quality-estimate.page';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {QualityEstimateFormComponent} from './quality-estimate-form/quality-estimate-form.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QualityEstimatePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    QualityEstimatePage,\r\n    QualityEstimateFormComponent\r\n  ],\r\n  entryComponents: [\r\n    QualityEstimateFormComponent\r\n  ]\r\n})\r\nexport class QualityEstimatePageModule {\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9wbGFubmluZy9xdWFsaXR5LWVzdGltYXRlL3F1YWxpdHktZXN0aW1hdGUucGFnZS5zY3NzIn0= */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {ContractDetailService} from '../services/contract-detail/contract-detail.service';\r\nimport {CostCenter, QualityDetail, QualityEstimate} from '@primetec/primetec-angular';\r\nimport {ModalController} from '@ionic/angular';\r\nimport {QualityEstimateFormComponent} from './quality-estimate-form/quality-estimate-form.component';\r\nimport {HttpService} from '../../../shared/services/http/http.service';\r\nimport {LoaderService} from '../../../shared/services/loader/loader.service';\r\nimport {AlertService} from '../../../shared/services/alert/alert.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {NetworkService} from '../../../shared/services/network/network.service';\r\nimport {StoreService} from '../../../shared/services/store/store.service';\r\n\r\n@Component({\r\n  selector: 'app-quality-estimate',\r\n  templateUrl: './quality-estimate.page.html',\r\n  styleUrls: ['./quality-estimate.page.scss'],\r\n})\r\nexport class QualityEstimatePage implements OnInit, OnDestroy {\r\n\r\n  public filteredQualityEstimate: Array<QualityEstimate>;\r\n  public costCenter: CostCenter;\r\n  public isOnline: boolean;\r\n  private qualityEstimate: Array<QualityEstimate>;\r\n  private qualityEstimateDetail: Array<QualityDetail>;\r\n  private currentUrl: string;\r\n  private isOnline$: Subscription;\r\n  private router$: Subscription;\r\n  private store$: Subscription;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private contractDetailService: ContractDetailService,\r\n    private modalController: ModalController,\r\n    private alertService: AlertService,\r\n    private httpService: HttpService,\r\n    private loaderService: LoaderService,\r\n    private networkService: NetworkService,\r\n    private storeService: StoreService\r\n  ) {\r\n    this.isOnline$ = this.networkService.getNetworkStatus().subscribe(status => {\r\n      this.isOnline = status;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.router$ = this.router.events.subscribe((route) => {\r\n      if (route instanceof NavigationEnd) {\r\n        this.currentUrl = route.url;\r\n      }\r\n    });\r\n\r\n    this.store$ = this.storeService.stateChanged.subscribe(data => {\r\n      this.costCenter = this.storeService.getCostCenter();\r\n      this.qualityEstimate = this.storeService.getQualityEstimate();\r\n      this.filteredQualityEstimate = this.storeService.getQualityEstimate();\r\n      this.qualityEstimateDetail = this.storeService.getQualityEstimateDetail();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isOnline$.unsubscribe();\r\n    this.router$.unsubscribe();\r\n    this.store$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * checkButton\r\n   */\r\n  public checkButton = () => {\r\n    return this.currentUrl === '/home-page/quality-estimate';\r\n  }\r\n\r\n  /**\r\n   * openForm\r\n   */\r\n  public openForm = async (qualityEstimate: QualityEstimate = null) => {\r\n    const modal = await this.modalController.create({\r\n      component: QualityEstimateFormComponent,\r\n      componentProps: {\r\n        costCenter: this.costCenter,\r\n        qualityEstimate,\r\n        qualityEstimateDetail: qualityEstimate ? this.qualityEstimateDetail.filter(item => item.qualityEstimate === qualityEstimate.id) : [],\r\n        isView: qualityEstimate !== null,\r\n        previous: this.qualityEstimate.length > 0 ? this.qualityEstimate[0] : null\r\n      },\r\n      backdropDismiss: false,\r\n      keyboardClose: false,\r\n      cssClass: 'full-screen-modal'\r\n    });\r\n\r\n    modal.onDidDismiss().then((data) => {\r\n      if (data.data) {\r\n        this.reloadList();\r\n      }\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n  /**\r\n   * searchQuality\r\n   * @param search\r\n   */\r\n  public searchQuality = (search: string) => {\r\n    if (search) {\r\n      this.filteredQualityEstimate = this.qualityEstimate.filter(item => {\r\n        return (\r\n          item.userName.toLowerCase().includes(search.toLowerCase()) ||\r\n          item.qualityName.toLowerCase().includes(search.toLowerCase()) ||\r\n          item.exportPercentage === parseInt(search, 10)\r\n        );\r\n      });\r\n    } else {\r\n      this.filteredQualityEstimate = this.qualityEstimate;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * cancelSearch\r\n   */\r\n  public cancelSearch = () => {\r\n    this.filteredQualityEstimate = this.qualityEstimate;\r\n  }\r\n\r\n  /**\r\n   * viewQuality\r\n   * @param qualityEstimate\r\n   */\r\n  public viewQuality = async (qualityEstimate: QualityEstimate) => {\r\n    await this.openForm(qualityEstimate);\r\n  }\r\n\r\n  /**\r\n   * deleteQuality\r\n   * @param qualityEstimate\r\n   */\r\n  public deleteQuality = async (qualityEstimate: QualityEstimate) => {\r\n    const response = await this.alertService.confirmAlert('Desea borrar esta estimacion de calidad?');\r\n\r\n    if (response) {\r\n      const newQuality = Object.assign({}, qualityEstimate, {id: -qualityEstimate.id});\r\n      delete this.costCenter.active;\r\n      const data = {\r\n        costCenter: this.costCenter,\r\n        quality: newQuality\r\n      };\r\n\r\n      this.storeQuality(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * reloadList\r\n   */\r\n  public reloadList = () => {\r\n    this.loaderService.startLoader('Cargando estimaciones de calidad');\r\n    this.contractDetailService.getCostCenterDetail(this.costCenter.id.toString()).subscribe((success: any) => {\r\n      this.storeService.setContractData(success.data);\r\n      this.loaderService.stopLoader();\r\n    }, error => {\r\n      this.loaderService.stopLoader();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * getItemDetails\r\n   * @param id\r\n   */\r\n  public getItemDetails = (id: number) => {\r\n    return this.qualityEstimateDetail.filter(item => item.qualityEstimate === id);\r\n  }\r\n\r\n  /**\r\n   * storeQuality\r\n   * @param data\r\n   */\r\n  private storeQuality = (data: any) => {\r\n    this.loaderService.startLoader('Borrando estimacion de calidad');\r\n    this.contractDetailService.storeQuality(data).subscribe(success => {\r\n      this.reloadList();\r\n      this.loaderService.stopLoader();\r\n    }, error => {\r\n      this.loaderService.stopLoader();\r\n      this.httpService.errorHandler(error);\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}