{"version":3,"sources":["./src/app/auth/pages/register/register.page.html","./src/app/auth/pages/register/register.module.ts","./src/app/auth/pages/register/register.page.scss","./src/app/auth/pages/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module-es2015.js","sourcesContent":["export default \"<ion-content>\\r\\n  <br>\\r\\n  <div *ngIf=\\\"device.cordova\\\">\\r\\n    <ion-avatar class=\\\"ion-no-margin\\\" style=\\\"margin: 0 auto !important\\\">\\r\\n      <img [src]=\\\"avatarPreview || 'assets/imgs/user.png'\\\">\\r\\n    </ion-avatar>\\r\\n  </div>\\r\\n\\r\\n  <br><br><br>\\r\\n  <ng-container *ngIf=\\\"device.cordova\\\">\\r\\n    <ion-item>\\r\\n      <ion-button (click)=\\\"openCamera()\\\" slot=\\\"start\\\">\\r\\n        <ion-icon name=\\\"camera\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-label>&nbsp;</ion-label>\\r\\n      <ion-button (click)=\\\"openGallery()\\\" slot=\\\"end\\\">\\r\\n        <ion-icon name=\\\"image\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-item>\\r\\n  </ng-container>\\r\\n\\r\\n  <div>\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"registerForm\\\">\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Rut</ion-label>\\r\\n        <ion-input (keyup)=\\\"formatIdentifier($event.target.value)\\\" formControlName=\\\"rut\\\" tabindex=\\\"0\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('rut').dirty && registerForm.get('rut').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('rut').hasError('required')\\\" style=\\\"color: red\\\">El rut es requerido.</span>\\r\\n          <span *ngIf=\\\"registerForm.get('rut').hasError('validRut')\\\" style=\\\"color: red\\\">El rut es inválido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Nombres</ion-label>\\r\\n        <ion-input formControlName=\\\"names\\\" tabindex=\\\"1\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('names').dirty && registerForm.get('names').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('names').hasError('required')\\\" style=\\\"color: red\\\">Los nombres son requeridos.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Apellido Paterno</ion-label>\\r\\n        <ion-input formControlName=\\\"lastName\\\" tabindex=\\\"2\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('lastName').dirty && registerForm.get('lastName').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('lastName').hasError('required')\\\" style=\\\"color: red\\\">El apellido parterno es requerido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Apellido Materno</ion-label>\\r\\n        <ion-input class=\\\"input-text\\\" formControlName=\\\"surName\\\" tabindex=\\\"3\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('surName').dirty && registerForm.get('surName').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('surName').hasError('required')\\\" style=\\\"color: red\\\">El apellido materno es requerido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n        <ion-input formControlName=\\\"email\\\" tabindex=\\\"4\\\" type=\\\"email\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('email').dirty && registerForm.get('email').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('email').hasError('required')\\\" style=\\\"color: red\\\">El correo es requerido.</span>\\r\\n          <span *ngIf=\\\"registerForm.get('email').hasError('email')\\\" style=\\\"color: red\\\">Ingrese un email valido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Telefono</ion-label>\\r\\n        <ion-input formControlName=\\\"phone\\\" tabindex=\\\"5\\\" type=\\\"tel\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('phone').dirty && registerForm.get('phone').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('phone').hasError('required')\\\" style=\\\"color: red\\\">El telefono es requerido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Contraseña</ion-label>\\r\\n        <ion-input formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('password').dirty && registerForm.get('password').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('password').hasError('required')\\\" style=\\\"color: red\\\">La contraseña es requerida.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Confirmar Contraseña</ion-label>\\r\\n        <ion-input formControlName=\\\"confirm\\\" tabindex=\\\"7\\\" type=\\\"password\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('confirm').dirty && registerForm.get('confirm').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('confirm').hasError('required')\\\" style=\\\"color: red\\\">Debe confirmar la contraseña.</span>\\r\\n          <span *ngIf=\\\"registerForm.get('confirm').hasError('notSame')\\\" style=\\\"color: red\\\">Las contraseñas no son iguales.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <br>\\r\\n      <ion-radio-group formControlName=\\\"access\\\">\\r\\n        <ion-list-header>\\r\\n          Tipo de Acceso\\r\\n        </ion-list-header>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Rut</ion-label>\\r\\n          <ion-radio value=\\\"1\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Correo</ion-label>\\r\\n          <ion-radio value=\\\"2\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n      </ion-radio-group>\\r\\n\\r\\n      <ng-container *ngIf=\\\"registerForm.get('access').errors\\\">\\r\\n        <span *ngIf=\\\"registerForm.get('access').hasError('required')\\\" style=\\\"color: red\\\">Debe seleccionar una opción.</span>\\r\\n      </ng-container>\\r\\n\\r\\n      <br><br>\\r\\n      <ion-button\\r\\n        [disabled]=\\\"registerForm.invalid\\\"\\r\\n        color=\\\"danger\\\"\\r\\n        expand=\\\"block\\\"\\r\\n        type=\\\"submit\\\">\\r\\n        Registrar\\r\\n      </ion-button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\"","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {RegisterPage} from './register.page';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {\r\n}\r\n","export default \".cameras {\\n  font-size: 40px;\\n  text-align: center;\\n}\\n\\nion-avatar {\\n  width: 100px;\\n}\\n\\nion-avatar img {\\n  height: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9wYWdlcy9yZWdpc3Rlci9EOlxcbnBtXFxmeDExX21vYmlsZS9zcmNcXGFwcFxcYXV0aFxccGFnZXNcXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiLCJzcmMvYXBwL2F1dGgvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0FDQ0Y7O0FEQ0U7RUFDRSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYW1lcmFzIHtcclxuICBmb250LXNpemU6IDQwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5pb24tYXZhdGFyIHtcclxuICB3aWR0aDogMTAwcHg7XHJcblxyXG4gIGltZyB7XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gIH1cclxufVxyXG4iLCIuY2FtZXJhcyB7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pb24tYXZhdGFyIHtcbiAgd2lkdGg6IDEwMHB4O1xufVxuaW9uLWF2YXRhciBpbWcge1xuICBoZWlnaHQ6IDEwMHB4O1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {confirmPassword} from '../../../validators/confirm-password.validator';\r\nimport {UserService} from '../../../shared/services/user/user.service';\r\nimport {LoaderService} from '../../../shared/services/loader/loader.service';\r\nimport {ToastService} from '../../../shared/services/toast/toast.service';\r\nimport {AuthService} from '../../../shared/services/auth/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {cleanRut, formatRut, ValidateRut} from '@primetec/primetec-angular';\r\nimport {HttpService} from '../../../shared/services/http/http.service';\r\nimport {Device} from '@ionic-native/device/ngx';\r\nimport {CameraService} from '../../../shared/services/camera/camera.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n\r\n  public registerForm: FormGroup;\r\n  public avatarPreview: any = null;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    private loaderService: LoaderService,\r\n    private toastService: ToastService,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private httpService: HttpService,\r\n    public device: Device,\r\n    private cameraService: CameraService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      names: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      surName: ['', Validators.required],\r\n      rut: ['', [\r\n        Validators.required,\r\n        ValidateRut\r\n      ]],\r\n      phone: ['+569', [\r\n        Validators.required,\r\n        // Validators.pattern('^(([+569])([0-9]{11}))$')\r\n      ]\r\n      ],\r\n      password: ['', Validators.required],\r\n      confirm: ['', Validators.required],\r\n      email: ['', [\r\n        Validators.required,\r\n        Validators.email\r\n      ]],\r\n      avatar: [''],\r\n      access: ['1', Validators.required],\r\n    }, {validator: confirmPassword});\r\n  }\r\n\r\n  /**\r\n   * onSubmit\r\n   */\r\n  public async onSubmit() {\r\n    const data = Object.assign({}, this.registerForm.value);\r\n    await this.create(data);\r\n  }\r\n\r\n  /**\r\n   * formatIdentifier\r\n   * @param identifier\r\n   */\r\n  public formatIdentifier = (rut: string) => {\r\n\r\n    if (rut.length > 0) {\r\n      this.registerForm.patchValue({\r\n        rut: formatRut(rut)\r\n      });\r\n    } else {\r\n      this.registerForm.patchValue({\r\n        rut: cleanRut(rut)\r\n      });\r\n    }\r\n\r\n    return rut;\r\n  }\r\n\r\n  /**\r\n   * openCamera\r\n   */\r\n  public openCamera = async () => {\r\n    const image = await this.cameraService.openCamera();\r\n\r\n    if (image) {\r\n      this.getImage(image);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * openGallery\r\n   */\r\n  public openGallery = async () => {\r\n    const image = await this.cameraService.openGallery();\r\n\r\n    if (image) {\r\n      this.getImage(image);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create\r\n   * @param data\r\n   */\r\n  private async create(data): Promise<any> {\r\n    await this.loaderService.startLoader();\r\n    return new Promise((resolve, reject) => {\r\n      this.userService.createUser(data).subscribe(success => {\r\n        this.toastService.successToast('Se creo el usuario correctamente, inicia sesión');\r\n        this.loaderService.stopLoader();\r\n        this.registerForm.reset();\r\n        this.router.navigate(['auth/login']);\r\n        resolve(true);\r\n      }, error => {\r\n        this.loaderService.stopLoader();\r\n        this.httpService.errorHandler(error);\r\n        resolve(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * getImage\r\n   * @param image\r\n   */\r\n  private getImage = (image: string) => {\r\n    const imageUrl = image;\r\n    this.avatarPreview = `data:image/jpeg;base64,${image}`;\r\n\r\n    this.registerForm.patchValue({\r\n      avatar: imageUrl\r\n    });\r\n\r\n    this.registerForm.updateValueAndValidity();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}