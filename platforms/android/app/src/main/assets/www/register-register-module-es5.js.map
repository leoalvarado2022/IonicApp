{"version":3,"sources":["src/app/auth/pages/register/register.page.html","src/app/auth/pages/register/register.module.ts","src/app/auth/pages/register/register.page.scss","src/app/auth/pages/register/register.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content>\\r\\n  <br>\\r\\n  <div *ngIf=\\\"device.cordova\\\">\\r\\n    <ion-avatar class=\\\"ion-no-margin\\\" style=\\\"margin: 0 auto !important\\\">\\r\\n      <img [src]=\\\"avatarPreview || 'assets/imgs/user.png'\\\">\\r\\n    </ion-avatar>\\r\\n  </div>\\r\\n\\r\\n  <br><br><br>\\r\\n  <ng-container *ngIf=\\\"device.cordova\\\">\\r\\n    <ion-item>\\r\\n      <ion-button (click)=\\\"openCamera()\\\" slot=\\\"start\\\">\\r\\n        <ion-icon name=\\\"camera\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-label>&nbsp;</ion-label>\\r\\n      <ion-button (click)=\\\"openGallery()\\\" slot=\\\"end\\\">\\r\\n        <ion-icon name=\\\"image\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-item>\\r\\n  </ng-container>\\r\\n\\r\\n  <div>\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"registerForm\\\">\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Rut</ion-label>\\r\\n        <ion-input (keyup)=\\\"formatIdentifier($event.target.value)\\\" formControlName=\\\"rut\\\" tabindex=\\\"0\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('rut').dirty && registerForm.get('rut').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('rut').hasError('required')\\\" style=\\\"color: red\\\">El rut es requerido.</span>\\r\\n          <span *ngIf=\\\"registerForm.get('rut').hasError('validRut')\\\" style=\\\"color: red\\\">El rut es inválido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Nombres</ion-label>\\r\\n        <ion-input formControlName=\\\"names\\\" tabindex=\\\"1\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('names').dirty && registerForm.get('names').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('names').hasError('required')\\\" style=\\\"color: red\\\">Los nombres son requeridos.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Apellido Paterno</ion-label>\\r\\n        <ion-input formControlName=\\\"lastName\\\" tabindex=\\\"2\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('lastName').dirty && registerForm.get('lastName').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('lastName').hasError('required')\\\" style=\\\"color: red\\\">El apellido parterno es requerido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Apellido Materno</ion-label>\\r\\n        <ion-input class=\\\"input-text\\\" formControlName=\\\"surName\\\" tabindex=\\\"3\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('surName').dirty && registerForm.get('surName').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('surName').hasError('required')\\\" style=\\\"color: red\\\">El apellido materno es requerido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n        <ion-input formControlName=\\\"email\\\" tabindex=\\\"4\\\" type=\\\"email\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('email').dirty && registerForm.get('email').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('email').hasError('required')\\\" style=\\\"color: red\\\">El correo es requerido.</span>\\r\\n          <span *ngIf=\\\"registerForm.get('email').hasError('email')\\\" style=\\\"color: red\\\">Ingrese un email valido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Telefono</ion-label>\\r\\n        <ion-input formControlName=\\\"phone\\\" tabindex=\\\"5\\\" type=\\\"tel\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('phone').dirty && registerForm.get('phone').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('phone').hasError('required')\\\" style=\\\"color: red\\\">El telefono es requerido.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Contraseña</ion-label>\\r\\n        <ion-input formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('password').dirty && registerForm.get('password').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('password').hasError('required')\\\" style=\\\"color: red\\\">La contraseña es requerida.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Confirmar Contraseña</ion-label>\\r\\n        <ion-input formControlName=\\\"confirm\\\" tabindex=\\\"7\\\" type=\\\"password\\\"></ion-input>\\r\\n        <ng-container *ngIf=\\\"registerForm.get('confirm').dirty && registerForm.get('confirm').errors\\\">\\r\\n          <span *ngIf=\\\"registerForm.get('confirm').hasError('required')\\\" style=\\\"color: red\\\">Debe confirmar la contraseña.</span>\\r\\n          <span *ngIf=\\\"registerForm.get('confirm').hasError('notSame')\\\" style=\\\"color: red\\\">Las contraseñas no son iguales.</span>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n\\r\\n      <br>\\r\\n      <ion-radio-group formControlName=\\\"access\\\">\\r\\n        <ion-list-header>\\r\\n          Tipo de Acceso\\r\\n        </ion-list-header>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Rut</ion-label>\\r\\n          <ion-radio value=\\\"1\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Correo</ion-label>\\r\\n          <ion-radio value=\\\"2\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n      </ion-radio-group>\\r\\n\\r\\n      <ng-container *ngIf=\\\"registerForm.get('access').errors\\\">\\r\\n        <span *ngIf=\\\"registerForm.get('access').hasError('required')\\\" style=\\\"color: red\\\">Debe seleccionar una opción.</span>\\r\\n      </ng-container>\\r\\n\\r\\n      <br><br>\\r\\n      <ion-button\\r\\n        [disabled]=\\\"registerForm.invalid\\\"\\r\\n        color=\\\"danger\\\"\\r\\n        expand=\\\"block\\\"\\r\\n        type=\\\"submit\\\">\\r\\n        Registrar\\r\\n      </ion-button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\"","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {RegisterPage} from './register.page';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {\r\n}\r\n","export default \".cameras {\\n  font-size: 40px;\\n  text-align: center;\\n}\\n\\nion-avatar {\\n  width: 100px;\\n}\\n\\nion-avatar img {\\n  height: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9wYWdlcy9yZWdpc3Rlci9EOlxcbnBtXFxmeDExX21vYmlsZS9zcmNcXGFwcFxcYXV0aFxccGFnZXNcXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiLCJzcmMvYXBwL2F1dGgvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0FDQ0Y7O0FEQ0U7RUFDRSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYW1lcmFzIHtcclxuICBmb250LXNpemU6IDQwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5pb24tYXZhdGFyIHtcclxuICB3aWR0aDogMTAwcHg7XHJcblxyXG4gIGltZyB7XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gIH1cclxufVxyXG4iLCIuY2FtZXJhcyB7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pb24tYXZhdGFyIHtcbiAgd2lkdGg6IDEwMHB4O1xufVxuaW9uLWF2YXRhciBpbWcge1xuICBoZWlnaHQ6IDEwMHB4O1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {confirmPassword} from '../../../validators/confirm-password.validator';\r\nimport {UserService} from '../../../shared/services/user/user.service';\r\nimport {LoaderService} from '../../../shared/services/loader/loader.service';\r\nimport {ToastService} from '../../../shared/services/toast/toast.service';\r\nimport {AuthService} from '../../../shared/services/auth/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {cleanRut, formatRut, ValidateRut} from '@primetec/primetec-angular';\r\nimport {HttpService} from '../../../shared/services/http/http.service';\r\nimport {Device} from '@ionic-native/device/ngx';\r\nimport {CameraService} from '../../../shared/services/camera/camera.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n\r\n  public registerForm: FormGroup;\r\n  public avatarPreview: any = null;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    private loaderService: LoaderService,\r\n    private toastService: ToastService,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private httpService: HttpService,\r\n    public device: Device,\r\n    private cameraService: CameraService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      names: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      surName: ['', Validators.required],\r\n      rut: ['', [\r\n        Validators.required,\r\n        ValidateRut\r\n      ]],\r\n      phone: ['+569', [\r\n        Validators.required,\r\n        // Validators.pattern('^(([+569])([0-9]{11}))$')\r\n      ]\r\n      ],\r\n      password: ['', Validators.required],\r\n      confirm: ['', Validators.required],\r\n      email: ['', [\r\n        Validators.required,\r\n        Validators.email\r\n      ]],\r\n      avatar: [''],\r\n      access: ['1', Validators.required],\r\n    }, {validator: confirmPassword});\r\n  }\r\n\r\n  /**\r\n   * onSubmit\r\n   */\r\n  public async onSubmit() {\r\n    const data = Object.assign({}, this.registerForm.value);\r\n    await this.create(data);\r\n  }\r\n\r\n  /**\r\n   * formatIdentifier\r\n   * @param identifier\r\n   */\r\n  public formatIdentifier = (rut: string) => {\r\n\r\n    if (rut.length > 0) {\r\n      this.registerForm.patchValue({\r\n        rut: formatRut(rut)\r\n      });\r\n    } else {\r\n      this.registerForm.patchValue({\r\n        rut: cleanRut(rut)\r\n      });\r\n    }\r\n\r\n    return rut;\r\n  }\r\n\r\n  /**\r\n   * openCamera\r\n   */\r\n  public openCamera = async () => {\r\n    const image = await this.cameraService.openCamera();\r\n\r\n    if (image) {\r\n      this.getImage(image);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * openGallery\r\n   */\r\n  public openGallery = async () => {\r\n    const image = await this.cameraService.openGallery();\r\n\r\n    if (image) {\r\n      this.getImage(image);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create\r\n   * @param data\r\n   */\r\n  private async create(data): Promise<any> {\r\n    await this.loaderService.startLoader();\r\n    return new Promise((resolve, reject) => {\r\n      this.userService.createUser(data).subscribe(success => {\r\n        this.toastService.successToast('Se creo el usuario correctamente, inicia sesión');\r\n        this.loaderService.stopLoader();\r\n        this.registerForm.reset();\r\n        this.router.navigate(['auth/login']);\r\n        resolve(true);\r\n      }, error => {\r\n        this.loaderService.stopLoader();\r\n        this.httpService.errorHandler(error);\r\n        resolve(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * getImage\r\n   * @param image\r\n   */\r\n  private getImage = (image: string) => {\r\n    const imageUrl = image;\r\n    this.avatarPreview = `data:image/jpeg;base64,${image}`;\r\n\r\n    this.registerForm.patchValue({\r\n      avatar: imageUrl\r\n    });\r\n\r\n    this.registerForm.updateValueAndValidity();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"register-register-module-es5.js"}