{"version":3,"sources":["src/app/modules/auth/pages/login/login.page.html","src/app/modules/auth/pages/login/login.module.ts","src/app/modules/auth/pages/login/login.page.scss","src/app/modules/auth/pages/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ymEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,wCAAA,CAAA,WAAA;AAFb,KADqB,CAAvB;;AAiBA,QAAa,eAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAV3B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,kDAAA,CAAA,cAAA,CAJO,EAKP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CALO,CADD;AAQR,MAAA,YAAY,EAAE,CAAC,wCAAA,CAAA,WAAA,CAAD;AARN,KAAT,CAU2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;AC3Bb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,k0CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBf,QAAa,SAAb;AAAA;AAAA;AASE,yBACU,WADV,EAEU,aAFV,EAGU,WAHV,EAIU,MAJV,EAKU,YALV,EAMU,WANV,EAOU,WAPV,EAQU,WARV,EASU,YATV,EASoC;AAAA;;AAAA;;AAR1B,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,YAAA,GAAA,YAAA;AA+BV;;;;AAGO,aAAA,QAAA,GAAW;AAAA,iBAAY,kCAAA,CAAA,WAAA,CAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA;AAAA;AAAA,kCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB,oBAAA,IADsB,GACf,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAK,SAAL,CAAe,KAAjC,CADe;AAE5B,oBAAA,IAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,QAAL,CAAc,WAAd,EAAhB;AAF4B;AAGd,2BAAM,KAAK,KAAL,CAAW,IAAX,CAAN;;AAHc;AAGtB,oBAAA,KAHsB;;AAK5B,wBAAI,IAAI,CAAC,QAAT,EAAmB;AACjB,2BAAK,YAAL,CAAkB,WAAlB,CAA8B,IAA9B;AACA,2BAAK,YAAL,CAAkB,eAAlB,CAAkC,IAAlC;AACD,qBAHD,MAGO;AACL,2BAAK,YAAL,CAAkB,WAAlB,CAA8B,KAA9B;AACA,2BAAK,YAAL,CAAkB,kBAAlB;AACD;;AAED,wBAAI,KAAK,IAAI,KAAK,CAAC,IAAN,KAAe,CAA5B,EAA+B;AAC7B,2BAAK,MAAL,CAAY,KAAZ;AACD,qBAFD,MAEO;AACL,0BAAI,KAAK,KAAK,IAAd,EAAoB;AAClB,6BAAK,YAAL,CAAkB,OAAlB,CAA0B,KAAK,CAAC,IAAhC;AACA,6BAAK,YAAL,CAAkB,kBAAlB,CAAqC,KAAK,CAAC,WAA3C;AACA,6BAAK,YAAL,CAAkB,QAAlB,CAA2B,KAAK,CAAC,KAAjC;AACA,6BAAK,YAAL,CAAkB,cAAlB,CAAiC,IAAjC;AACA,6BAAK,SAAL;AACD;AACF;;AAvB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAA,EAAZ;AAAA,SAAX;AA0BP;;;;;;AAIO,aAAA,MAAA,GAAS,UAAC,KAAD,EAAe;AAC7B,UAAA,KAAI,CAAC,YAAL,CAAkB,YAAlB,CAA+B,KAAK,CAAC,OAArC;;AACA,UAAA,KAAI,CAAC,SAAL,CAAe,KAAf;;AACA,UAAA,KAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,KAAK,CAAC,KAAjC;;AACA,UAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,SALM;AAOP;;;;;AAGO,aAAA,SAAA,GAAY,YAAK;AACtB,UAAA,KAAI,CAAC,SAAL,CAAe,KAAf;;AACA,UAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,SAHM;AAKP;;;;;;AAIO,aAAA,UAAA,GAAa,UAAC,KAAD,EAAe;AACjC,cAAM,MAAM,GAAG,gBAAf;;AAEA,cAAI,KAAK,CAAC,GAAV,EAAe;AACb,mBAAO,MAAM,CAAC,QAAP,CAAgB,KAAK,CAAC,GAAtB,CAAP;AACD;;AAED,iBAAO,KAAP;AACD,SARM;AAUP;;;;;AAGQ,aAAA,aAAA,GAAgB,YAAK;AAC3B,cAAI,KAAI,CAAC,YAAL,CAAkB,WAAlB,EAAJ,EAAqC;AACnC,gBAAM,YAAY,GAAG,KAAI,CAAC,YAAL,CAAkB,eAAlB,EAArB;;AAEA,gBAAI,YAAJ,EAAkB;AAChB,cAAA,KAAI,CAAC,SAAL,CAAe,UAAf,CAA0B;AACxB,gBAAA,QAAQ,EAAE,YAAY,CAAC,QADC;AAExB,gBAAA,QAAQ,EAAE,YAAY,CAAC,QAFC;AAGxB,gBAAA,QAAQ,EAAE,CAAC,IAAD;AAHc,eAA1B;;AAMA,cAAA,KAAI,CAAC,SAAL,CAAe,sBAAf;AACD;AACF;AACF,SAdO;AAgBR;;;;;;AAIQ,aAAA,KAAA,GAAQ,UAAC,IAAD,EAA4B;AAC1C,UAAA,KAAI,CAAC,aAAL,CAAmB,WAAnB,CAA+B,qBAA/B;;AAEA,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAY;AAC7B,YAAA,KAAI,CAAC,WAAL,CAAiB,KAAjB,CAAuB,IAAvB,EAA6B,SAA7B,CAAuC,UAAC,OAAD,EAAiB;AAEtD,cAAA,KAAI,CAAC,aAAL,CAAmB,UAAnB;;AACA,cAAA,OAAO,CAAC,OAAD,CAAP;AACD,aAJD,EAIG,UAAA,KAAK,EAAG;AACT,cAAA,KAAI,CAAC,aAAL,CAAmB,UAAnB;;AACA,kBAAM,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY,IAAzB;;AAEA,kBAAI,IAAI,KAAK,qBAAb,EAAoC;AAClC,oBAAM,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,IAAZ,CAAiB,KAA/B;AACA,gBAAA,OAAO,CAAC;AAAC,kBAAA,IAAI,EAAE,CAAP;AAAU,kBAAA,KAAK,EAAL,KAAV;AAAiB,kBAAA,IAAI,EAAE,IAAvB;AAA6B,kBAAA,OAAO,EAAE,KAAK,CAAC,KAAN,CAAY;AAAlD,iBAAD,CAAP;AACD,eAHD,MAGO;AACL,gBAAA,KAAI,CAAC,WAAL,CAAiB,YAAjB,CAA8B,KAA9B;;AACA,gBAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,aAfD;AAgBD,WAjBM,CAAP;AAkBD,SArBO;AAjHP;;AArBH;AAAA;AAAA,mCAuBU;AAAA;;AACN,eAAK,OAAL,GAAe,KAAK,MAAL,CAAY,MAAZ,CAAmB,SAAnB,CAA6B,UAAC,CAAD,EAAM;AAChD,gBAAI,CAAC,YAAY,4CAAA,CAAA,eAAA,CAAjB,EAAgC;AAC9B,cAAA,MAAI,CAAC,aAAL;AACD;AACF,WAJc,CAAf;AAMA,eAAK,MAAL,GAAc,KAAK,YAAL,CAAkB,YAAlB,CAA+B,SAA/B,CAAyC,UAAA,IAAI,EAAG;AAC5D,YAAA,MAAI,CAAC,aAAL;AACD,WAFa,CAAd;AAIA,eAAK,SAAL,GAAiB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACtC,YAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL,CAD4B;AAEtC,YAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAF4B;AAGtC,YAAA,QAAQ,EAAE,CAAC,KAAD;AAH4B,WAAvB,CAAjB;AAMA,eAAK,UAAL,GAAkB,MAAM,CAAC,UAAzB;AACA,eAAK,WAAL,GAAmB,MAAM,CAAC,WAA1B;AACD;AA1CH;AAAA;AAAA,sCA4Ca;AACT,eAAK,OAAL,CAAa,WAAb;AACA,eAAK,MAAL,CAAY,WAAZ;AACD;AA/CH;;AAAA;AAAA,OAAA;;;;cAUyB,2CAAA,CAAA,aAAA;;cACE,mEAAA,CAAA,eAAA;;cACF,+DAAA,CAAA,aAAA;;cACL,4CAAA,CAAA,QAAA;;cACM,iEAAA,CAAA,cAAA;;cACD,+DAAA,CAAA,aAAA;;cACA,+DAAA,CAAA,aAAA;;cACA,+DAAA,CAAA,aAAA;;cACC,yEAAA,CAAA,cAAA;;;;AAlBb,IAAA,SAAS,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALrB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKqB,E,uEAUG,2CAAA,CAAA,aAAA,C,EACE,mEAAA,CAAA,eAAA,C,EACF,+DAAA,CAAA,aAAA,C,EACL,4CAAA,CAAA,QAAA,C,EACM,iEAAA,CAAA,cAAA,C,EACD,+DAAA,CAAA,aAAA,C,EACA,+DAAA,CAAA,aAAA,C,EACA,+DAAA,CAAA,aAAA,C,EACC,yEAAA,CAAA,cAAA,C,EAlBJ,CAAA,EAAT,SAAS,CAAT","sourcesContent":["export default \"<ion-content>\\n  <div class=\\\"pd-default\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"loginForm\\\">\\n      <br>\\n      <ion-item>\\n\\n        <ion-label position=\\\"floating\\\">Usuario o correo</ion-label>\\n        <ion-input\\n          formControlName=\\\"username\\\"\\n          type=\\\"text\\\">\\n        </ion-input>\\n\\n        <div *ngIf=\\\"loginForm.controls.username.dirty && loginForm.hasError('required', 'username')\\\" style=\\\"color: red\\\">\\n          El Usuario o correo es requerido.\\n        </div>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Contrase침a</ion-label>\\n        <ion-input\\n          formControlName=\\\"password\\\"\\n          type=\\\"password\\\">\\n        </ion-input>\\n      </ion-item>\\n\\n      <br/>\\n      <ion-button\\n        [disabled]=\\\"loginForm.invalid\\\"\\n        color=\\\"danger\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\">\\n        Iniciar Sesi칩n\\n      </ion-button>\\n\\n      <ng-container *ngIf=\\\"innerWidth < 575\\\">\\n        <ion-row>\\n          <ion-col>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-checkbox [checked]=\\\"loginForm.get('remember').value\\\" formControlName=\\\"remember\\\" slot=\\\"start\\\"></ion-checkbox>\\n              <ion-label>Recordarme</ion-label>\\n            </ion-item>\\n          </ion-col>\\n\\n          <ion-col>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label class=\\\"ion-text-center\\\" color=\\\"danger\\\">Olvide mi contrase침a</ion-label>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ng-container>\\n\\n      <ng-container *ngIf=\\\"innerWidth > 575\\\">\\n        <div class=\\\"ion-text-left recordarme\\\">\\n          <ion-checkbox [checked]=\\\"false\\\" color=\\\"primary\\\" formControlName=\\\"remember\\\" id=\\\"remember\\\" name='remember'></ion-checkbox>\\n          <span>Recordarme</span>\\n        </div>\\n\\n        <div class=\\\"ion-text-right\\\">\\n          <ion-button color=\\\"danger\\\" fill=\\\"clear\\\" routerDirection=\\\"forward\\\" routerLink=\\\"/auth/password-recovery\\\">Olvide mi\\n            contrase침a\\n          </ion-button>\\n        </div>\\n      </ng-container>\\n    </form>\\n  </div>\\n</ion-content>\\n\"","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {LoginPage} from './login.page';\nimport {SharedModule} from '../../../../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {\n}\n","export default \".recordarme {\\n  position: absolute;\\n  padding: 11px 5px;\\n}\\n.recordarme span {\\n  padding: 10px;\\n  position: relative;\\n  top: -5px;\\n}\\n.bottom {\\n  position: absolute;\\n  width: 90%;\\n  bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWlzY29udHJlcmFzL1ByaW1ldGVjL2Z4MTEvZngxMV9tb2JpbGUvc3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxpQkFBQTtBQ0NGO0FEQ0U7RUFDRSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0FDQ0o7QURHQTtFQUNFLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYXV0aC9wYWdlcy9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVjb3JkYXJtZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogMTFweCA1cHg7XG5cbiAgc3BhbiB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtNXB4O1xuICB9XG59XG5cbi5ib3R0b20ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiA5MCU7XG4gIGJvdHRvbTogMDtcbn1cbiIsIi5yZWNvcmRhcm1lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwYWRkaW5nOiAxMXB4IDVweDtcbn1cbi5yZWNvcmRhcm1lIHNwYW4ge1xuICBwYWRkaW5nOiAxMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTVweDtcbn1cblxuLmJvdHRvbSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDkwJTtcbiAgYm90dG9tOiAwO1xufSJdfQ== */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {LoaderService} from '../../../../shared/services/loader/loader.service';\nimport {AuthService} from '../../../../shared/services/auth/auth.service';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {ToastService} from '../../../../shared/services/toast/toast.service';\nimport {UserService} from '../../../../shared/services/user/user.service';\nimport {SyncService} from '../../../../shared/services/sync/sync.service';\nimport {HttpService} from '../../../../shared/services/http/http.service';\nimport {StoreService} from 'src/app/shared/services/store/store.service';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit, OnDestroy {\n\n  public loginForm: FormGroup;\n  public innerWidth: number;\n  public innerHeight: number;\n\n  private router$: Subscription;\n  private store$: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loaderService: LoaderService,\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastService,\n    private syncService: SyncService,\n    private userService: UserService,\n    private httpService: HttpService,\n    private storeService: StoreService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.router$ = this.router.events.subscribe((e) => {\n      if (e instanceof NavigationEnd) {\n        this.checkRemember();\n      }\n    });\n\n    this.store$ = this.storeService.stateChanged.subscribe(data => {\n      this.checkRemember();\n    });\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', Validators.required],\n      remember: [false]\n    });\n\n    this.innerWidth = window.innerWidth;\n    this.innerHeight = window.innerHeight;\n  }\n\n  ngOnDestroy(): void {\n    this.router$.unsubscribe();\n    this.store$.unsubscribe();\n  }\n\n  /**\n   * onSubmit\n   */\n  public onSubmit = async () => {\n    const data = Object.assign({}, this.loginForm.value);\n    data.username = data.username.toLowerCase();\n    const login = await this.login(data);\n\n    if (data.remember) {\n      this.storeService.setRemember(true);\n      this.storeService.setRememberData(data);\n    } else {\n      this.storeService.setRemember(false);\n      this.storeService.removeRememberData();\n    }\n\n    if (login && login.code === 1) {\n      this.addPin(login);\n    } else {\n      if (login !== null) {\n        this.storeService.setUser(login.user);\n        this.storeService.setUserConnections(login.connections);\n        this.storeService.setToken(login.token);\n        this.storeService.setLoginStatus(true);\n        this.makeLogin();\n      }\n    }\n  }\n\n  /**\n   * addPin\n   * @param login add PIN\n   */\n  public addPin = (login: any) => {\n    this.toastService.warningToast(login.message);\n    this.loginForm.reset();\n    this.storeService.setToken(login.token);\n    this.router.navigate(['auth/pin']);\n  }\n\n  /**\n   * @description hacer login si no tiene pin\n   */\n  public makeLogin = () => {\n    this.loginForm.reset();\n    this.router.navigate(['/home-page']);\n  }\n\n  /**\n   * filterKeys\n   * @param event\n   */\n  public filterKeys = (event: any) => {\n    const filter = '0123456789.-kK';\n\n    if (event.key) {\n      return filter.includes(event.key);\n    }\n\n    return false;\n  }\n\n  /**\n   * checkRemember\n   */\n  private checkRemember = () => {\n    if (this.storeService.getRemember()) {\n      const rememberData = this.storeService.getRememberData();\n\n      if (rememberData) {\n        this.loginForm.patchValue({\n          username: rememberData.username,\n          password: rememberData.password,\n          remember: [true]\n        });\n\n        this.loginForm.updateValueAndValidity();\n      }\n    }\n  }\n\n  /**\n   * loginEndpoint\n   * @param data LoginEndpoint\n   */\n  private login = (data: any): Promise<any> => {\n    this.loaderService.startLoader('Iniciando sesion...');\n\n    return new Promise((resolve) => {\n      this.authService.login(data).subscribe((success: any) => {\n\n        this.loaderService.stopLoader();\n        resolve(success);\n      }, error => {\n        this.loaderService.stopLoader();\n        const name = error.error.name;\n\n        if (name === 'ConnectionsNotFound') {\n          const token = error.error.data.token;\n          resolve({code: 1, token, user: data, message: error.error.message});\n        } else {\n          this.httpService.errorHandler(error);\n          resolve(null);\n        }\n      });\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"login-login-module-es5.js"}