{"version":3,"sources":["./src/app/home-page/planning/harvest-estimate/harvest-estimate-form/harvest-estimate-form.component.html","./src/app/home-page/planning/harvest-estimate/harvest-estimate.page.html","./src/app/home-page/planning/harvest-estimate/harvest-estimate-form/harvest-estimate-form.component.scss","./src/app/home-page/planning/harvest-estimate/harvest-estimate-form/harvest-estimate-form.component.ts","./src/app/home-page/planning/harvest-estimate/harvest-estimate.module.ts","./src/app/home-page/planning/harvest-estimate/harvest-estimate.page.scss","./src/app/home-page/planning/harvest-estimate/harvest-estimate.page.ts"],"names":[],"mappings":"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","file":"planning-harvest-estimate-harvest-estimate-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\" color=\\\"secondary\\\">\\n        <ion-icon name=\\\"arrow-back\\\" slot=\\\"icon-only\\\" style=\\\"color:white;\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title> {{ harvestEstimate ? 'Ver' : 'Registrar'  }}  Estimacion</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"harvestForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">\\n        Cantidad {{ showUnitName() | uppercase }}\\n      </ion-label>\\n      <ion-input [value]=\\\"harvestForm.get('quantity') .value | mask: 'separator'\\\" clearInput formControlName=\\\"quantity\\\" placeholder=\\\"Ingresar Cantidad\\\" type=\\\"tel\\\"></ion-input>\\n      <ng-container *ngIf=\\\"harvestForm.get('quantity').dirty\\\">\\n        <span *ngIf=\\\"harvestForm.get('quantity').hasError('required')\\\" class=\\\"errorMsg\\\">Ingrese Cantidad</span>\\n        <span *ngIf=\\\"harvestForm.get('quantity').hasError('pattern')\\\" class=\\\"errorMsg\\\">Solo numeros</span>\\n      </ng-container>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">\\n        Cantidad Diaria {{ showUnitName() | uppercase }}\\n      </ion-label>\\n      <ion-input [value]=\\\"harvestForm.get('dailyAmount') .value | mask: 'separator'\\\" clearInput formControlName=\\\"dailyAmount\\\" placeholder=\\\"Ingresar Cantidad Diaria\\\" type=\\\"tel\\\"></ion-input>\\n      <ng-container *ngIf=\\\"harvestForm.get('dailyAmount').dirty\\\">\\n        <span *ngIf=\\\"harvestForm.get('dailyAmount').hasError('required')\\\" class=\\\"errorMsg\\\">Ingrese cantidad diaria</span>\\n        <span *ngIf=\\\"harvestForm.get('quantity').hasError('pattern')\\\" class=\\\"errorMsg\\\">Solo numeros</span>\\n      </ng-container>\\n    </ion-item>\\n\\n    <ion-list>\\n      <ion-radio-group>\\n        <ion-list-header>\\n          <ion-label>Trabaja Festivos ?</ion-label>\\n        </ion-list-header>\\n\\n        <ion-item>\\n          <ion-label>Si</ion-label>\\n          <ion-radio (ionSelect)=\\\"workHolidaysEvent($event.detail.value)\\\" [checked]=\\\"harvestForm.get('workHolidays').value === 1\\\" [disabled]=\\\"isView\\\" slot=\\\"start\\\" value=\\\"1\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>No</ion-label>\\n          <ion-radio (ionSelect)=\\\"workHolidaysEvent($event.detail.value)\\\" [checked]=\\\"harvestForm.get('workHolidays').value === 0\\\" [disabled]=\\\"isView\\\" slot=\\\"start\\\" value=\\\"0\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ng-container *ngIf=\\\"harvestForm.get('workHolidays').dirty && harvestForm.get('workHolidays').hasError('required')\\\">\\n          <span class=\\\"errorMsg\\\">Indique si trabaja los feriados.</span>\\n        </ng-container>\\n      </ion-radio-group>\\n    </ion-list>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha Inicio</ion-label>\\n      <ion-datetime [displayFormat]=\\\"dateFormat\\\" [max]=\\\"maxDate\\\" [pickerFormat]=\\\"dateFormat\\\" formControlName=\\\"startDate\\\" placeholder=\\\"Ingresar Fecha Inicio\\\"></ion-datetime>\\n      <ng-container *ngIf=\\\"harvestForm.get('startDate').dirty && harvestForm.get('startDate').hasError('required')\\\">\\n        <span class=\\\"errorMsg\\\">Ingrese fecha inicio</span>\\n      </ng-container>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha Fin</ion-label>\\n      <ion-input [value]=\\\" harvestForm.get('endDate').value\\\" disabled=\\\"true\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Plantas de Proceso</ion-label>\\n      <ion-select [interfaceOptions]=\\\"processPlantAction\\\" [selectedText]=\\\"getSelectedProcessPlant()\\\" cancelText=\\\"Cancelar\\\" formControlName=\\\"processPlant\\\" interface=\\\"action-sheet\\\">\\n        <ion-select-option *ngFor=\\\"let plant of processPlants\\\" [value]=\\\"plant.id\\\">\\n          {{ plant.name }}\\n        </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Destino</ion-label>\\n      <ion-select [interfaceOptions]=\\\"destinationAction\\\" [selectedText]=\\\"getSelectedDestination()\\\" cancelText=\\\"Cancelar\\\" formControlName=\\\"destination\\\" interface=\\\"action-sheet\\\">\\n        <ion-select-option *ngFor=\\\"let destination of destinations\\\" [value]=\\\"destination.id\\\">\\n          {{ destination.name }}\\n        </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <br><br>\\n    <ng-container *ngIf=\\\"!harvestEstimate\\\">\\n      <ion-button (click)=\\\"submit()\\\" [disabled]=\\\"harvestForm.invalid || isSaving\\\" color=\\\"primary\\\" expand=\\\"block\\\">\\n        Guardar\\n      </ion-button>\\n    </ng-container>\\n\\n  </form>\\n</ion-content>\\n\"","export default \"<ion-header>\\n  <ion-toolbar class=\\\"background-color-header\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button class=\\\"white\\\" text=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"white\\\">\\n      <strong>Estimación de Cosecha</strong>\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-notifications></app-notifications>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-searchbar placeholder=\\\"Buscar...\\\" (ionChange)=\\\"searchHarvest($event.target.value)\\\" (ionClear)=\\\"cancelSearch()\\\" animated class=\\\"production\\\" showCancelButton=\\\"never\\\"></ion-searchbar>\\n\\n<ion-content class=\\\"content\\\">\\n\\n  <ng-container *ngFor=\\\"let harvest of filteredHarvestEstimate ; let index =index\\\">\\n    <div class=\\\"card-sli\\\">\\n      <div class=\\\"card-sli-back\\\">\\n        <app-harvest-estimate-item\\n          (deleteHarvest)=\\\"deleteHarvest($event)\\\"\\n          (harvestSelected)=\\\"viewHarvest($event)\\\"\\n          [isOld]=\\\"index > 0\\\"\\n          [item]=\\\"harvest\\\"\\n          [slideDisabled]=\\\"false\\\">\\n        </app-harvest-estimate-item>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"checkButton()\\\">\\n    <ion-fab horizontal=\\\"end\\\" slot=\\\"fixed\\\" vertical=\\\"bottom\\\">\\n      <ion-fab-button (click)=\\\"openForm()\\\" [disabled]=\\\"!costCenter || !isOnline\\\" color=\\\"warning\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-fab>\\n  </ng-container>\\n\\n</ion-content>\\n\"","export default \".errorMsg {\\n  color: red;\\n}\\n\\nion-item ion-label {\\n  min-width: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWlzY29udHJlcmFzL1ByaW1ldGVjL2Z4MTEvZngxMV9tb2JpbGUvc3JjL2FwcC9ob21lLXBhZ2UvcGxhbm5pbmcvaGFydmVzdC1lc3RpbWF0ZS9oYXJ2ZXN0LWVzdGltYXRlLWZvcm0vaGFydmVzdC1lc3RpbWF0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ob21lLXBhZ2UvcGxhbm5pbmcvaGFydmVzdC1lc3RpbWF0ZS9oYXJ2ZXN0LWVzdGltYXRlLWZvcm0vaGFydmVzdC1lc3RpbWF0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQ0NGOztBREdFO0VBQ0UsY0FBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvaG9tZS1wYWdlL3BsYW5uaW5nL2hhcnZlc3QtZXN0aW1hdGUvaGFydmVzdC1lc3RpbWF0ZS1mb3JtL2hhcnZlc3QtZXN0aW1hdGUtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvck1zZyB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbmlvbi1pdGVtIHtcbiAgaW9uLWxhYmVsIHtcbiAgICBtaW4td2lkdGg6IDUwJTtcbiAgfVxufVxuIiwiLmVycm9yTXNnIHtcbiAgY29sb3I6IHJlZDtcbn1cblxuaW9uLWl0ZW0gaW9uLWxhYmVsIHtcbiAgbWluLXdpZHRoOiA1MCU7XG59Il19 */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {ModalController} from '@ionic/angular';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CostCenter, EntityList, Generic, HarvestEstimate, Unit} from '@primetec/primetec-angular';\nimport {SyncService} from '../../../../shared/services/sync/sync.service';\nimport {ContractDetailService} from '../../services/contract-detail/contract-detail.service';\nimport * as moment from 'moment';\nimport {AuthService} from '../../../../shared/services/auth/auth.service';\nimport {ToastService} from '../../../../shared/services/toast/toast.service';\nimport {HttpService} from '../../../../shared/services/http/http.service';\nimport {LoaderService} from '../../../../shared/services/loader/loader.service';\nimport {debounceTime} from 'rxjs/operators';\nimport {StoreService} from '../../../../shared/services/store/store.service';\n\n@Component({\n  selector: 'app-harvest-estimate-form',\n  templateUrl: './harvest-estimate-form.component.html',\n  styleUrls: ['./harvest-estimate-form.component.scss']\n})\nexport class HarvestEstimateFormComponent implements OnInit {\n\n  @Input() costCenter: CostCenter;\n  @Input() harvestEstimate: HarvestEstimate;\n  @Input() isView: boolean;\n  @Input() previous: HarvestEstimate;\n\n  public readonly processPlantAction: any = {\n    header: 'Plantas de Proceso',\n    keyboardClose: false,\n    backdropDismiss: false\n  };\n\n  public readonly destinationAction: any = {\n    header: 'Destinos',\n    keyboardClose: false,\n    backdropDismiss: false\n  };\n\n  public readonly dateFormat = 'DD/MM/YYYY';\n  public readonly maxDate = '2030';\n  public harvestForm: FormGroup;\n  public units: Array<Unit> = [];\n  public processPlants: Array<EntityList> = [];\n  public destinations: Array<Generic> = [];\n\n  public isSaving = false;\n  public holidays: Array<any> = [];\n  private userCompany: any;\n\n  constructor(\n    private modalController: ModalController,\n    private formBuilder: FormBuilder,\n    private syncService: SyncService,\n    private contractDetailService: ContractDetailService,\n    private authService: AuthService,\n    private toastService: ToastService,\n    private httpService: HttpService,\n    private loaderService: LoaderService,\n    private storeService: StoreService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.holidays = this.storeService.getHolidays();\n    this.userCompany = this.storeService.getActiveCompany();\n\n    if (this.isView) {\n      this.harvestForm = this.formBuilder.group({\n        id: [this.harvestEstimate.id],\n        costCenter: [this.costCenter.id],\n        user: [this.userCompany.user],\n        unit: [this.costCenter.controlUnit],\n        quantity: [{value: this.harvestEstimate.quantity, disabled: true}],\n        dailyAmount: [{value: this.harvestEstimate.dailyAmount, disabled: true}],\n        workHolidays: [{value: this.harvestEstimate.workHolidays ? 1 : 0, disabled: true}],\n        startDate: [{value: moment.utc(this.harvestEstimate.startDate).format('YYYY-MM-DD'), disabled: true}],\n        endDate: [moment.utc(this.harvestEstimate.endDate).format('DD/MM/YYYY')],\n        processPlant: [{value: this.harvestEstimate ? this.harvestEstimate.processPlant : '', disabled: true}, Validators.required],\n        destination: [{value: this.harvestEstimate ? this.harvestEstimate.destination : '', disabled: true}, Validators.required]\n      });\n    } else {\n      this.harvestForm = this.formBuilder.group({\n        id: [0, Validators.required],\n        costCenter: [this.costCenter.id],\n        user: [this.userCompany.user, Validators.required],\n        unit: [this.costCenter.controlUnit, Validators.required],\n        quantity: [this.previous ? this.previous.quantity : '', [\n          Validators.required,\n          Validators.pattern(/^([0-9.])+$/),\n          Validators.min(1)\n        ]],\n        dailyAmount: [this.previous ? this.previous.dailyAmount : '', [\n          Validators.required,\n          Validators.pattern(/^([0-9.])+$/),\n          Validators.min(1)\n        ]],\n        workHolidays: [this.previous ? this.previous.workHolidays ? 1 : 0 : 0, Validators.required],\n        startDate: [this.previous ? moment(this.cleanDate(this.previous.startDate), 'YYYY-MM-DD').format('YYYY-MM-DD') : this.costCenter.harvestDate, Validators.required],\n        endDate: [this.previous ? moment(this.cleanDate(this.previous.endDate), 'YYYY-MM-DD').format('DD/MM/YYYY') : '', Validators.required],\n        processPlant: [this.previous ? this.previous.processPlant : '', Validators.required],\n        destination: [this.previous ? this.previous.destination : '', Validators.required]\n      });\n\n      this.harvestForm.valueChanges.pipe(\n        debounceTime(1000),\n      ).subscribe((data) => {\n        this.calculateEndDate();\n      });\n    }\n\n    this.loadData();\n  }\n\n  /**\n   * closeModal\n   */\n  public closeModal = (status: boolean = false) => {\n    this.modalController.dismiss(status);\n  }\n\n  /**\n   * submit\n   */\n  public submit = () => {\n    if (this.harvestForm.valid && !this.isSaving) {\n\n      this.isSaving = true;\n      const estimation = Object.assign({}, this.harvestForm.value);\n      estimation.endDate = moment(estimation.endDate, 'DD/MM/YYYY').format('YYYY-MM-DD');\n      estimation.quantity = this.cleanParseNumber(estimation.quantity);\n      estimation.dailyAmount = this.cleanParseNumber(estimation.dailyAmount);\n\n      delete this.costCenter.active;\n      const data = {\n        costCenter: this.costCenter,\n        harvestEstimate: estimation\n      };\n\n      this.storeEstimation(data);\n    } else {\n      this.isSaving = false;\n    }\n  }\n\n  /**\n   * showUnitName\n   */\n  public showUnitName = () => {\n    const find = this.units.find(item => item.id === this.costCenter.controlUnit);\n    return find ? find.code : 'N/A';\n  }\n\n  /**\n   * workHolidaysEvent\n   * @param event\n   */\n  public workHolidaysEvent = (value: string) => {\n    this.harvestForm.patchValue({\n      workHolidays: parseInt(value, 10)\n    });\n\n    this.harvestForm.updateValueAndValidity();\n  }\n\n  /**\n   * getSelectedProcessPlant\n   */\n  public getSelectedProcessPlant = () => {\n    if (this.processPlants) {\n      const id = this.harvestForm.get('processPlant').value;\n      const find = this.processPlants.find(item => item.id === id);\n      return find ? find.name : '';\n    }\n\n    return '';\n  }\n\n  /**\n   * getSelectedDestination\n   */\n  public getSelectedDestination = () => {\n    if (this.destinations) {\n      const id = this.harvestForm.get('destination').value;\n      const find = this.destinations.find(item => item['id'] === id);\n      return find ? find['name'] : '';\n    }\n\n    return '';\n  }\n\n  /**\n   * loadData\n   */\n  private loadData = () => {\n    this.units = this.storeService.getUnits();\n    this.processPlants = this.storeService.getProcessPlants();\n    this.destinations = this.storeService.getDestinations();\n\n    this.preSelectProcessPlant();\n    this.preSelectDestination();\n  }\n\n  /**\n   * storeEstimation\n   * @param data\n   */\n  private storeEstimation = (data: any) => {\n    this.loaderService.startLoader('Guardando estimacion...');\n    this.contractDetailService.storeHarvest(data).subscribe(success => {\n      this.loaderService.stopLoader();\n      this.isSaving = false;\n      this.closeModal(true);\n    }, error => {\n      this.loaderService.stopLoader();\n      this.isSaving = false;\n      this.httpService.errorHandler(error);\n    });\n  }\n\n  /**\n   * calculateEndDate\n   */\n  private calculateEndDate = () => {\n    const {\n      quantity,\n      dailyAmount,\n      workHolidays,\n      startDate\n    } = this.harvestForm.value;\n\n    if (quantity && dailyAmount) {\n      const days = Math.ceil((this.cleanParseNumber(quantity) > 0 ? this.cleanParseNumber(quantity) : 1) / (this.cleanParseNumber(dailyAmount) > 0 ? this.cleanParseNumber(dailyAmount) : 1));\n      const holidays = [];\n      const daysAdded = 1;\n      let momentDate = moment.utc(startDate);\n\n      if (workHolidays === 0) {\n        this.holidays.forEach(holiday => {\n          holidays.push(moment.utc(holiday.fecha).format(this.dateFormat));\n        });\n      }\n\n      momentDate = this.computeEndDate(days, daysAdded, momentDate, holidays);\n\n      this.harvestForm.patchValue({\n        endDate: momentDate.format(this.dateFormat)\n      });\n\n      this.harvestForm.updateValueAndValidity();\n    }\n  }\n\n  /**\n   * cleanDate\n   * @param date\n   */\n  private cleanDate = (date: string) => {\n    if (date.includes('T')) {\n      return date.split('T')[0];\n    }\n\n    return date;\n  }\n\n  /**\n   * computeEndDate\n   * @param workingDays\n   * @param daysAdded\n   * @param momentDate\n   */\n  private computeEndDate = (workingDays: number = 1, daysAdded: number = 1, momentDate: any, holidays: Array<any> = []) => {\n    if (workingDays > daysAdded && daysAdded < 60) {\n      if (momentDate.weekday() > 0 && !holidays.includes(momentDate.format(this.dateFormat))) {\n        daysAdded++;\n      }\n\n      momentDate = momentDate.add(1, 'days');\n      return this.computeEndDate(workingDays, daysAdded, momentDate, holidays);\n    }\n\n    return momentDate;\n  }\n\n  /**\n   * cleanParseNumber\n   * @param value\n   */\n  private cleanParseNumber = (value: string): number => {\n    return parseInt(String(value).replace('.', ''), 10);\n  }\n\n  /**\n   * preSelectProcessPlant\n   */\n  private preSelectProcessPlant = () => {\n    if (this.processPlants.length === 1) {\n      this.harvestForm.patchValue({\n        processPlant: this.processPlants[0].id\n      });\n\n      this.harvestForm.updateValueAndValidity();\n    }\n  }\n\n  /**\n   * preSelectDestination\n   */\n  private preSelectDestination = () => {\n    if (this.destinations.length === 1) {\n      this.harvestForm.patchValue({\n        destination: this.destinations[0].id\n      });\n\n      this.harvestForm.updateValueAndValidity();\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HarvestEstimatePage} from './harvest-estimate.page';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {HarvestEstimateFormComponent} from './harvest-estimate-form/harvest-estimate-form.component';\nimport {NgxMaskModule} from 'ngx-mask';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HarvestEstimatePage\n  }\n];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(routes),\n    NgxMaskModule\n  ],\n  declarations: [\n    HarvestEstimatePage,\n    HarvestEstimateFormComponent\n  ],\n  entryComponents: [\n    HarvestEstimateFormComponent\n  ]\n})\nexport class HarvestEstimatePageModule {\n\n}\n","export default \".card-content {\\n  margin-bottom: 5px;\\n}\\n.card-content .estimate-content {\\n  display: table;\\n  width: 100%;\\n}\\n.card-content .estimate-content.old .card {\\n  background: var(--color-box-light) !important;\\n}\\n.card-content .estimate-content .card {\\n  display: table-cell;\\n  text-align: center;\\n  width: 33.3%;\\n  padding: 5px;\\n  background: white;\\n}\\n.card-content .estimate-content .card p {\\n  margin: 0;\\n}\\n.card-content .estimate-content .card p:nth-child(1) {\\n  font-size: 10px;\\n  color: var(--ion-color-medium-shade);\\n}\\n.card-content .estimate-content .card p:nth-child(2) {\\n  font-size: 14px;\\n}\\n.card-content .update-card {\\n  background: var(--color-login-header);\\n  width: 100%;\\n}\\n.card-content .update-card.old {\\n  background: white !important;\\n  height: 16px;\\n  padding: 0 5px;\\n}\\n.card-content .update-card.old p {\\n  color: var(--ion-color-light-shade) !important;\\n}\\n.card-content .update-card p {\\n  color: white;\\n  margin: 0;\\n  font-size: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWlzY29udHJlcmFzL1ByaW1ldGVjL2Z4MTEvZngxMV9tb2JpbGUvc3JjL2FwcC9ob21lLXBhZ2UvcGxhbm5pbmcvaGFydmVzdC1lc3RpbWF0ZS9oYXJ2ZXN0LWVzdGltYXRlLnBhZ2Uuc2NzcyIsInNyYy9hcHAvaG9tZS1wYWdlL3BsYW5uaW5nL2hhcnZlc3QtZXN0aW1hdGUvaGFydmVzdC1lc3RpbWF0ZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxrQkFBQTtBQ0FGO0FERUU7RUFDRSxjQUFBO0VBQ0EsV0FBQTtBQ0FKO0FER007RUFDRSw2Q0FBQTtBQ0RSO0FES0k7RUFDRSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUVBLFlBQUE7RUFDQSxpQkFBQTtBQ0pOO0FETU07RUFDRSxTQUFBO0FDSlI7QURNUTtFQUNFLGVBQUE7RUFDQSxvQ0FBQTtBQ0pWO0FET1E7RUFDRSxlQUFBO0FDTFY7QURXRTtFQVdFLHFDQUFBO0VBQ0EsV0FBQTtBQ25CSjtBRFFJO0VBQ0UsNEJBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQ05OO0FEUU07RUFDRSw4Q0FBQTtBQ05SO0FEYUk7RUFDRSxZQUFBO0VBQ0EsU0FBQTtFQUNBLGVBQUE7QUNYTiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9wbGFubmluZy9oYXJ2ZXN0LWVzdGltYXRlL2hhcnZlc3QtZXN0aW1hdGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uY2FyZC1jb250ZW50IHtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuXG4gIC5lc3RpbWF0ZS1jb250ZW50IHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgICYub2xkIHtcbiAgICAgIC5jYXJkIHtcbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3ItYm94LWxpZ2h0KSAhaW1wb3J0YW50O1xuICAgICAgfVxuICAgIH1cblxuICAgIC5jYXJkIHtcbiAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB3aWR0aDogMzMuMyU7XG4gICAgICAvL2JvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yLWxvZ2luLWhlYWRlcik7XG4gICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgcCB7XG4gICAgICAgIG1hcmdpbjogMDtcblxuICAgICAgICAmOm50aC1jaGlsZCgxKSB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtLXNoYWRlKTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAudXBkYXRlLWNhcmQge1xuICAgICYub2xkIHtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICBwYWRkaW5nOiAwIDVweDtcblxuICAgICAgcCB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHQtc2hhZGUpICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3ItbG9naW4taGVhZGVyKTtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIHAge1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgIH1cbiAgfVxufVxuIiwiLmNhcmQtY29udGVudCB7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cbi5jYXJkLWNvbnRlbnQgLmVzdGltYXRlLWNvbnRlbnQge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgd2lkdGg6IDEwMCU7XG59XG4uY2FyZC1jb250ZW50IC5lc3RpbWF0ZS1jb250ZW50Lm9sZCAuY2FyZCB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLWJveC1saWdodCkgIWltcG9ydGFudDtcbn1cbi5jYXJkLWNvbnRlbnQgLmVzdGltYXRlLWNvbnRlbnQgLmNhcmQge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAzMy4zJTtcbiAgcGFkZGluZzogNXB4O1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cbi5jYXJkLWNvbnRlbnQgLmVzdGltYXRlLWNvbnRlbnQgLmNhcmQgcCB7XG4gIG1hcmdpbjogMDtcbn1cbi5jYXJkLWNvbnRlbnQgLmVzdGltYXRlLWNvbnRlbnQgLmNhcmQgcDpudGgtY2hpbGQoMSkge1xuICBmb250LXNpemU6IDEwcHg7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtLXNoYWRlKTtcbn1cbi5jYXJkLWNvbnRlbnQgLmVzdGltYXRlLWNvbnRlbnQgLmNhcmQgcDpudGgtY2hpbGQoMikge1xuICBmb250LXNpemU6IDE0cHg7XG59XG4uY2FyZC1jb250ZW50IC51cGRhdGUtY2FyZCB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLWxvZ2luLWhlYWRlcik7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmNhcmQtY29udGVudCAudXBkYXRlLWNhcmQub2xkIHtcbiAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxNnB4O1xuICBwYWRkaW5nOiAwIDVweDtcbn1cbi5jYXJkLWNvbnRlbnQgLnVwZGF0ZS1jYXJkLm9sZCBwIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodC1zaGFkZSkgIWltcG9ydGFudDtcbn1cbi5jYXJkLWNvbnRlbnQgLnVwZGF0ZS1jYXJkIHAge1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAxMHB4O1xufSJdfQ== */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {ModalController} from '@ionic/angular';\nimport {HarvestEstimateFormComponent} from './harvest-estimate-form/harvest-estimate-form.component';\nimport {CostCenter, HarvestEstimate} from '@primetec/primetec-angular';\nimport {ContractDetailService} from '../services/contract-detail/contract-detail.service';\nimport {HttpService} from '../../../shared/services/http/http.service';\nimport {LoaderService} from '../../../shared/services/loader/loader.service';\nimport {AlertService} from '../../../shared/services/alert/alert.service';\nimport {Subscription} from 'rxjs';\nimport {NetworkService} from '../../../shared/services/network/network.service';\nimport {StoreService} from '../../../shared/services/store/store.service';\n\n@Component({\n  selector: 'app-harvest-estimate',\n  templateUrl: './harvest-estimate.page.html',\n  styleUrls: ['./harvest-estimate.page.scss'],\n})\nexport class HarvestEstimatePage implements OnInit, OnDestroy {\n\n  public costCenter: CostCenter;\n  public filteredHarvestEstimate: Array<HarvestEstimate>;\n  public isOnline: boolean;\n  private harvestEstimate: Array<HarvestEstimate>;\n  private currentUrl: string;\n  private isOnline$: Subscription;\n  private router$: Subscription;\n  private store$: Subscription;\n\n  constructor(\n    private router: Router,\n    private modalController: ModalController,\n    private contractDetailService: ContractDetailService,\n    private alertService: AlertService,\n    private httpService: HttpService,\n    private loaderService: LoaderService,\n    private networkService: NetworkService,\n    private storeService: StoreService\n  ) {\n    this.isOnline$ = this.networkService.getNetworkStatus().subscribe(status => {\n      this.isOnline = status;\n    });\n  }\n\n  ngOnInit() {\n    this.router$ = this.router.events.subscribe((route) => {\n      if (route instanceof NavigationEnd) {\n        this.currentUrl = route.url;\n      }\n    });\n\n    this.store$ = this.storeService.stateChanged.subscribe(data => {\n      this.costCenter = this.storeService.getCostCenter();\n      this.harvestEstimate = this.storeService.getHarvestEstimate();\n      this.filteredHarvestEstimate = this.storeService.getHarvestEstimate();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.isOnline$.unsubscribe();\n    this.router$.unsubscribe();\n    this.store$.unsubscribe();\n  }\n\n  /**\n   * checkButton\n   */\n  public checkButton = () => {\n    return this.currentUrl === '/home-page/harvest-estimate';\n  }\n\n  /**\n   * openForm\n   */\n  public openForm = async (harvestEstimate: HarvestEstimate = null) => {\n    const modal = await this.modalController.create({\n      component: HarvestEstimateFormComponent,\n      componentProps: {\n        costCenter: this.costCenter,\n        harvestEstimate,\n        isView: harvestEstimate !== null,\n        previous: this.harvestEstimate.length > 0 ? this.harvestEstimate[0] : null\n      },\n      backdropDismiss: false,\n      keyboardClose: false,\n      cssClass: 'full-screen-modal'\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data.data) {\n        this.reloadList();\n      }\n    });\n\n    return await modal.present();\n  }\n\n  /**\n   * searchHarvest\n   * @param search\n   */\n  public searchHarvest = (search: string) => {\n    if (search) {\n      this.filteredHarvestEstimate = this.harvestEstimate.filter(item => {\n        return (\n          item.userName.toLowerCase().includes(search.toLowerCase()) ||\n          item.quantity === parseInt(search, 10)\n        );\n      });\n    } else {\n      this.filteredHarvestEstimate = this.harvestEstimate;\n    }\n  }\n\n  /**\n   * cancelSearch\n   */\n  public cancelSearch = () => {\n    this.filteredHarvestEstimate = this.harvestEstimate;\n  }\n\n  /**\n   * harvestSelected\n   * @param item\n   */\n  public viewHarvest = async (harvestEstimate: HarvestEstimate) => {\n    await this.openForm(harvestEstimate);\n  }\n\n  /**\n   * deleteHarvest\n   * @param harvestEstimate\n   */\n  public deleteHarvest = async (harvestEstimate: HarvestEstimate) => {\n    const respuesta = await this.alertService.confirmAlert('Desea borrar esta estimacion de cosecha?');\n\n    if (respuesta) {\n      const newHarvest = Object.assign({}, harvestEstimate, {\n        id: -harvestEstimate.id,\n        workHolidays: harvestEstimate ? 1 : 0\n      });\n      delete this.costCenter.active;\n      const data = {\n        costCenter: this.costCenter,\n        harvestEstimate: newHarvest\n      };\n\n      this.storeEstimation(data);\n    }\n  }\n\n  /**\n   * reloadList\n   */\n  public reloadList = () => {\n    this.loaderService.startLoader();\n    this.contractDetailService.getCostCenterDetail(this.costCenter.id.toString()).subscribe((success: any) => {\n      this.storeService.setContractData(success.data);\n      this.loaderService.stopLoader();\n    }, error => {\n      this.loaderService.stopLoader();\n      this.httpService.errorHandler(error);\n    });\n  }\n\n  /**\n   * storeEstimation\n   * @param data\n   */\n  private storeEstimation = (data: any) => {\n    this.loaderService.startLoader('Borrando estimacion de cosecha');\n    this.contractDetailService.storeHarvest(data).subscribe(success => {\n      this.reloadList();\n      this.loaderService.stopLoader();\n    }, error => {\n      this.loaderService.stopLoader();\n      this.httpService.errorHandler(error);\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}