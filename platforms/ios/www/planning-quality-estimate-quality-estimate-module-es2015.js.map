{"version":3,"sources":["./src/app/home-page/planning/quality-estimate/quality-estimate-form/quality-estimate-form.component.html","./src/app/home-page/planning/quality-estimate/quality-estimate.page.html","./src/app/home-page/planning/quality-estimate/quality-estimate-form/quality-estimate-form.component.scss","./src/app/home-page/planning/quality-estimate/quality-estimate-form/quality-estimate-form.component.ts","./src/app/home-page/planning/quality-estimate/quality-estimate.module.ts","./src/app/home-page/planning/quality-estimate/quality-estimate.page.scss","./src/app/home-page/planning/quality-estimate/quality-estimate.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,iSAAkO,0EAA0E,yCAAyC,kgBAAkgB,UAAU,omCAAomC,8HAA8H,wBAAwB,+pBAA+pB,2BAA2B,smB;;;;;;;;;;;;ACApyF;AAAe,iyBAAkuB,60B;;;;;;;;;;;;ACAjvB;AAAe,2EAAY,eAAe,uBAAuB,GAAG,wBAAwB,mBAAmB,GAAG,wBAAwB,sBAAsB,GAAG,oBAAoB,wBAAwB,GAAG,6CAA6C,2uC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxM;AAEsB;AAC9B;AAC2B;AACmB;AACnB;AACG;AACH;AACM;AACH;AAO7E,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IAqBvC,YACU,eAAgC,EAChC,WAAwB,EACxB,WAAwB,EACxB,qBAA4C,EAC5C,WAAwB,EACxB,YAA0B,EAC1B,WAAwB,EACxB,aAA4B,EAC5B,YAA0B;QAR1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAtBpB,6BAAwB,GAAQ;YAC9C,MAAM,EAAE,WAAW;YACnB,aAAa,EAAE,KAAK;YACpB,eAAe,EAAE,KAAK;SACvB,CAAC;QAGK,aAAQ,GAAG,KAAK,CAAC;QA2DxB;;WAEG;QACI,eAAU,GAAG,CAAC,SAAkB,KAAK,EAAE,EAAE;YAC9C,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;QAED;;WAEG;QACI,WAAM,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBAE9B,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;oBACrD,UAAU,EAAE,IAAI,CAAC,UAAU;iBAC5B,CAAC,CAAC;gBAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE;oBACtE,UAAU,EAAE,OAAO,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU;iBAC/D,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;gBAE9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;QACH,CAAC;QAED;;;WAGG;QACI,mBAAc,GAAG,CAAC,IAAS,EAAE,EAAE;YACpC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;YACnG,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC;QACnD,CAAC;QAED;;;WAGG;QACI,qBAAgB,GAAG,CAAC,IAAe,EAAE,EAAE;YAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAc,CAAC;YAEhD,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,QAAQ,EAAE;gBACjC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnF,IAAI,UAAU,EAAE;oBACd,KAAK,GAAG,KAAK,GAAG,UAAU,CAAC;iBAC5B;aACF;YAED,OAAO,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACrE,CAAC;QAED;;WAEG;QACI,aAAQ,GAAG,GAAG,EAAE;YACrB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAc,CAAC;YAE5D,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,QAAQ,EAAE;gBACjC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnF,IAAI,UAAU,IAAI,UAAU,GAAG,CAAC,EAAE;oBAChC,KAAK,GAAG,KAAK,GAAG,UAAU,CAAC;iBAC5B;aACF;YAED,OAAO,KAAK,CAAC;QACf,CAAC;QAED;;WAEG;QACI,uBAAkB,GAAG,GAAG,EAAE;YAC/B,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;gBACzD,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;gBACzD,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;aAC9B;YAED,OAAO,EAAE,CAAC;QACZ,CAAC;QAED;;WAEG;QACK,iBAAY,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAEtG,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAc,CAAC;YAE5D,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACxC,IAAI,IAAI,GAAG,IAAI,CAAC;gBAChB,IAAI,IAAI,CAAC,qBAAqB,EAAE;oBAC9B,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;iBAC9E;gBAED,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBACxC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAC7C,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAC/D,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACvC,UAAU,EAAE,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAC,EAAE;4BACnE,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC;4BACnB,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC;yBAClB,CAAC;oBACF,IAAI,EAAE,CAAC,CAAC,CAAC;iBACV,CAAC,CAAC;gBACH,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACxB;QACH,CAAC;IA5JD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QACxD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACxC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBAC9B,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAClD,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACrD,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAClD,OAAO,EAAE,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACrF,gBAAgB,EAAE,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE;4BACjF,yDAAU,CAAC,QAAQ;4BACnB,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC;4BACnB,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC;yBAClB,CAAC;oBACF,IAAI,EAAE,CAAC,CAAC,CAAC;iBACV,CAAC;gBACF,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;aACrC,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,EAAC,CAAC,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACxC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBAC9B,EAAE,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAC5B,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACrD,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAClD,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAC1E,gBAAgB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,EAAE;4BACtE,yDAAU,CAAC,QAAQ;4BACnB,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC;4BACnB,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC;yBAClB,CAAC;oBACF,IAAI,EAAE,CAAC,CAAC,CAAC;iBACV,CAAC;gBACF,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;aACrC,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,EAAC,CAAC,CAAC;SACxC;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAuHD;;;OAGG;IACK,YAAY,CAAC,IAAS;QAC5B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC;QAC1D,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAChE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YA1L4B,8DAAe;YACnB,0DAAW;YACX,8EAAW;YACD,uGAAqB;YAC/B,8EAAW;YACV,iFAAY;YACb,8EAAW;YACT,oFAAa;YACd,kFAAY;;AA5B3B;IAAR,2DAAK,EAAE;;gEAAwB;AACvB;IAAR,2DAAK,EAAE;;qEAAkC;AACjC;IAAR,2DAAK,EAAE;oEAAwB,KAAK;2EAAgB;AAC5C;IAAR,2DAAK,EAAE;;4DAAiB;AAChB;IAAR,2DAAK,EAAE;;8DAA2B;AANxB,4BAA4B;IALxC,+DAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,uSAAqD;;KAEtD,CAAC;2EAuB2B,8DAAe;QACnB,0DAAW;QACX,8EAAW;QACD,uGAAqB;QAC/B,8EAAW;QACV,iFAAY;QACb,8EAAW;QACT,oFAAa;QACd,kFAAY;GA9BzB,4BAA4B,CAgNxC;AAhNwC;;;;;;;;;;;;;;;;;;;;;;ACjBF;AACc;AACO;AACD;AAC0C;AAErG,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0EAAmB;KAC/B;CACF,CAAC;AAeF,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;CAErC;AAFY,yBAAyB;IAbrC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,kEAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE;YACZ,0EAAmB;YACnB,mHAA4B;SAC7B;QACD,eAAe,EAAE;YACf,mHAA4B;SAC7B;KACF,CAAC;GACW,yBAAyB,CAErC;AAFqC;;;;;;;;;;;;;AC1BtC;AAAe,6GAA8C,2L;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACL;AACoC;AAE3C;AACsD;AAC9B;AACM;AACH;AAEM;AACN;AAO1E,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAY9B,YACU,MAAc,EACd,qBAA4C,EAC5C,eAAgC,EAChC,YAA0B,EAC1B,WAAwB,EACxB,aAA4B,EAC5B,cAA8B,EAC9B,YAA0B;QAP1B,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QA4BpC;;WAEG;QACI,gBAAW,GAAG,GAAG,EAAE;YACxB,OAAO,IAAI,CAAC,UAAU,KAAK,6BAA6B,CAAC;QAC3D,CAAC;QAED;;WAEG;QACI,aAAQ,GAAG,CAAO,kBAAmC,IAAI,EAAE,EAAE,CAAC;YACnE,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,SAAS,EAAE,mHAA4B;gBACvC,cAAc,EAAE;oBACd,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,eAAe;oBACf,qBAAqB,EAAE,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,KAAK,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;oBACpI,MAAM,EAAE,eAAe,KAAK,IAAI;oBAChC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;iBAC3E;gBACD,eAAe,EAAE,KAAK;gBACtB,aAAa,EAAE,KAAK;gBACpB,QAAQ,EAAE,mBAAmB;aAC9B,CAAC,CAAC;YAEH,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;gBACjC,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;YACH,CAAC,CAAC,CAAC;YAEH,OAAO,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;QAED;;;WAGG;QACI,kBAAa,GAAG,CAAC,MAAc,EAAE,EAAE;YACxC,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;oBAChE,OAAO,CACL,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;wBAC1D,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;wBAC7D,IAAI,CAAC,gBAAgB,KAAK,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAC/C,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC;aACrD;QACH,CAAC;QAED;;WAEG;QACI,iBAAY,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC;QACtD,CAAC;QAED;;;WAGG;QACI,gBAAW,GAAG,CAAO,eAAgC,EAAE,EAAE,CAAC;YAC/D,MAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QACvC,CAAC;QAED;;;WAGG;QACI,kBAAa,GAAG,CAAO,eAAgC,EAAE,EAAE,CAAC;YACjE,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,0CAA0C,CAAC,CAAC;YAElG,IAAI,QAAQ,EAAE;gBACZ,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,EAAC,EAAE,EAAE,CAAC,eAAe,CAAC,EAAE,EAAC,CAAC,CAAC;gBACjF,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBAC9B,MAAM,IAAI,GAAG;oBACX,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,OAAO,EAAE,UAAU;iBACpB,CAAC;gBAEF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACzB;QACH,CAAC;QAED;;WAEG;QACI,eAAU,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,kCAAkC,CAAC,CAAC;YACnE,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,OAAY,EAAE,EAAE;gBACvG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAClC,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;QACL,CAAC;QAED;;;WAGG;QACI,mBAAc,GAAG,CAAC,EAAU,EAAE,EAAE;YACrC,OAAO,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,KAAK,EAAE,CAAC,CAAC;QAChF,CAAC;QAED;;;WAGG;QACK,iBAAY,GAAG,CAAC,IAAS,EAAE,EAAE;YACnC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,gCAAgC,CAAC,CAAC;YACjE,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;gBAChE,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAClC,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;gBAChC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;QACL,CAAC;QAlJC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACpD,IAAI,KAAK,YAAY,6DAAa,EAAE;gBAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;YACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;YAC9D,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;YACtE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,wBAAwB,EAAE,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;IAC5B,CAAC;CA2HF;;YA5JmB,sDAAM;YACS,uGAAqB;YAC3B,8DAAe;YAClB,iFAAY;YACb,8EAAW;YACT,oFAAa;YACZ,uFAAc;YAChB,kFAAY;;AApBzB,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,6PAA2C;;KAE5C,CAAC;2EAckB,sDAAM;QACS,uGAAqB;QAC3B,8DAAe;QAClB,iFAAY;QACb,8EAAW;QACT,oFAAa;QACZ,uFAAc;QAChB,kFAAY;GApBzB,mBAAmB,CAyK/B;AAzK+B","file":"planning-quality-estimate-quality-estimate-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\" color=\\\"secondary\\\">\\n        <ion-icon name=\\\"arrow-back\\\" slot=\\\"icon-only\\\" style=\\\"color:white;\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ qualityEstimate ? 'Ver' : 'Registrar' }} Calidad</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"qualityForm\\\">\\n    <ng-container formGroupName=\\\"quality\\\">\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">Calidad</ion-label>\\n        <ion-select [interfaceOptions]=\\\"customActionSheetOptions\\\" [selectedText]=\\\"getSelectedQuality()\\\" cancelText=\\\"Cancelar\\\" formControlName=\\\"quality\\\" interface=\\\"action-sheet\\\">\\n          <ion-select-option *ngFor=\\\"let q of qualities\\\" [value]=\\\"q.id\\\">\\n            {{ q.name }}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ng-container *ngIf=\\\"qualityForm.get(['quality', 'quality']).hasError('required')\\\">\\n        <span class=\\\"errorMsg\\\">Seleccione la Calidad</span>\\n      </ng-container>\\n\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">% de Exportación</ion-label>\\n        <ion-input clearInput formControlName=\\\"exportPercentage\\\" placeholder=\\\"Ingrese el %\\\" type=\\\"number\\\"></ion-input>\\n      </ion-item>\\n\\n      <ng-container *ngIf=\\\"qualityForm.get(['quality', 'exportPercentage']).hasError('max')\\\">\\n        <span class=\\\"errorMsg\\\">El porcentaje maximo es 100</span>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"qualityForm.get(['quality', 'exportPercentage']).hasError('min')\\\">\\n        <span class=\\\"errorMsg\\\">El porcentaje minimo es 0</span>\\n      </ng-container>\\n\\n    </ng-container>\\n\\n    <ng-container formArrayName=\\\"calibers\\\">\\n      <ion-list>\\n        <ion-list-header>\\n          Datos Calibres\\n        </ion-list-header>\\n\\n        <ng-container *ngFor=\\\"let item of qualityForm.get('calibers')['controls']; let index = index\\\" [formGroupName]=\\\"index.toString()\\\">\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\">{{ getCaliberName(item) }}</ion-label>\\n            <ion-input clearInput formControlName=\\\"percentage\\\" placeholder=\\\"Ingrese el %\\\" type=\\\"number\\\"></ion-input>\\n          </ion-item>\\n          <ng-container *ngIf=\\\"item.get('percentage').hasError('max')\\\">\\n            <span class=\\\"errorMsg\\\">El porcentaje maximo es 100</span>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"item.get('percentage').hasError('min')\\\">\\n            <span class=\\\"errorMsg\\\">El porcentaje minimo es 0</span>\\n          </ng-container>\\n        </ng-container>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\">Total</ion-label>\\n          <ion-input [disabled]=\\\"isView\\\" [ngClass]=\\\"{ 'total-padding': !isView }\\\" [value]=\\\"getTotal()\\\" clearInput readonly=\\\"true\\\" type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n\\n        <ng-container *ngIf=\\\"!isView && qualityForm.hasError('wrongPercentage')\\\">\\n          <span class=\\\"errorMsg\\\">El porcentaje total debe sumar 100%</span>\\n        </ng-container>\\n\\n      </ion-list>\\n    </ng-container>\\n\\n    <br><br>\\n    <ng-container *ngIf=\\\"!qualityEstimate\\\">\\n      <ion-button (click)=\\\"submit()\\\" [disabled]=\\\"qualityForm.invalid || isSaving\\\" color=\\\"primary\\\" expand=\\\"block\\\">\\n        Guardar\\n      </ion-button>\\n    </ng-container>\\n\\n  </form>\\n</ion-content>\\n\"","export default \"<ion-header>\\n  <ion-toolbar class=\\\"background-color-header\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button class=\\\"white\\\" text=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"white\\\">\\n      <strong>Estimación de Calidad</strong>\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-notifications></app-notifications>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-searchbar\\n  placeholder=\\\"Buscar...\\\"\\n  (ionChange)=\\\"searchQuality($event.target.value)\\\"\\n  (ionClear)=\\\"cancelSearch()\\\"\\n  animated\\n  class=\\\"production\\\"\\n  showCancelButton=\\\"never\\\">\\n</ion-searchbar>\\n\\n<ion-content class=\\\"content\\\">\\n\\n  <ng-container *ngFor=\\\"let quality of filteredQualityEstimate; let index = index\\\">\\n    <div class=\\\"card-sli\\\">\\n      <div class=\\\"card-sli-back\\\">\\n        <app-quality-estimate-item\\n          (itemDelete)=\\\"deleteQuality(quality)\\\"\\n          (itemSelected)=\\\"viewQuality(quality)\\\"\\n          [costCenter]=\\\"costCenter\\\"\\n          [details]=\\\"getItemDetails(quality.id)\\\"\\n          [isOld]=\\\"index > 0 \\\"\\n          [item]=\\\"quality\\\"\\n          [slideDisabled]=\\\"false\\\">\\n        </app-quality-estimate-item>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"checkButton()\\\">\\n    <ion-fab horizontal=\\\"end\\\" slot=\\\"fixed\\\" vertical=\\\"bottom\\\">\\n      <ion-fab-button (click)=\\\"openForm()\\\" [disabled]=\\\"!costCenter || !isOnline\\\" color=\\\"success\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-fab>\\n  </ng-container>\\n\\n</ion-content>\\n\"","export default \".errorMsg {\\n  color: red;\\n  padding-left: 15px;\\n}\\n\\nion-item ion-label {\\n  min-width: 50%;\\n}\\n\\nion-item ion-input {\\n  text-align: right;\\n}\\n\\n.total-padding {\\n  --padding-end: 37px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWlzY29udHJlcmFzL1ByaW1ldGVjL2Z4MTEvZngxMV9tb2JpbGUvc3JjL2FwcC9ob21lLXBhZ2UvcGxhbm5pbmcvcXVhbGl0eS1lc3RpbWF0ZS9xdWFsaXR5LWVzdGltYXRlLWZvcm0vcXVhbGl0eS1lc3RpbWF0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ob21lLXBhZ2UvcGxhbm5pbmcvcXVhbGl0eS1lc3RpbWF0ZS9xdWFsaXR5LWVzdGltYXRlLWZvcm0vcXVhbGl0eS1lc3RpbWF0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGtCQUFBO0FDQ0Y7O0FER0U7RUFDRSxjQUFBO0FDQUo7O0FER0U7RUFDRSxpQkFBQTtBQ0RKOztBREtBO0VBQ0UsbUJBQUE7QUNGRiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9wbGFubmluZy9xdWFsaXR5LWVzdGltYXRlL3F1YWxpdHktZXN0aW1hdGUtZm9ybS9xdWFsaXR5LWVzdGltYXRlLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3JNc2cge1xuICBjb2xvcjogcmVkO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG5cbmlvbi1pdGVtIHtcbiAgaW9uLWxhYmVsIHtcbiAgICBtaW4td2lkdGg6IDUwJTtcbiAgfVxuXG4gIGlvbi1pbnB1dCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbn1cblxuLnRvdGFsLXBhZGRpbmcge1xuICAtLXBhZGRpbmctZW5kOiAzN3B4O1xufVxuIiwiLmVycm9yTXNnIHtcbiAgY29sb3I6IHJlZDtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufVxuXG5pb24taXRlbSBpb24tbGFiZWwge1xuICBtaW4td2lkdGg6IDUwJTtcbn1cbmlvbi1pdGVtIGlvbi1pbnB1dCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4udG90YWwtcGFkZGluZyB7XG4gIC0tcGFkZGluZy1lbmQ6IDM3cHg7XG59Il19 */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Caliber, CostCenter, Generic, QualityDetail, QualityEstimate} from '@primetec/primetec-angular';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ModalController} from '@ionic/angular';\nimport {AuthService} from '../../../../shared/services/auth/auth.service';\nimport {ContractDetailService} from '../../services/contract-detail/contract-detail.service';\nimport {SyncService} from '../../../../shared/services/sync/sync.service';\nimport {ToastService} from '../../../../shared/services/toast/toast.service';\nimport {HttpService} from '../../../../shared/services/http/http.service';\nimport {LoaderService} from '../../../../shared/services/loader/loader.service';\nimport {StoreService} from '../../../../shared/services/store/store.service';\n\n@Component({\n  selector: 'app-quality-estimate-form',\n  templateUrl: './quality-estimate-form.component.html',\n  styleUrls: ['./quality-estimate-form.component.scss'],\n})\nexport class QualityEstimateFormComponent implements OnInit {\n\n  @Input() costCenter: CostCenter;\n  @Input() qualityEstimate: QualityEstimate;\n  @Input() qualityEstimateDetail: Array<QualityDetail>;\n  @Input() isView: boolean;\n  @Input() previous: QualityEstimate;\n\n  public readonly customActionSheetOptions: any = {\n    header: 'Calidades',\n    keyboardClose: false,\n    backdropDismiss: false\n  };\n\n  public qualityForm: FormGroup;\n  public isSaving = false;\n  public qualities: Array<Generic>;\n  private userCompany: any;\n  private calibers: Array<Caliber>;\n  private filteredCalibers: Array<Caliber>;\n\n  constructor(\n    private modalController: ModalController,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private contractDetailService: ContractDetailService,\n    private syncService: SyncService,\n    private toastService: ToastService,\n    private httpService: HttpService,\n    private loaderService: LoaderService,\n    private storeService: StoreService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.userCompany = this.storeService.getActiveCompany();\n    if (this.isView) {\n      this.qualityForm = this.formBuilder.group({\n        quality: this.formBuilder.group({\n          id: [this.qualityEstimate.id, Validators.required],\n          costCenter: [this.costCenter.id, Validators.required],\n          user: [this.userCompany.user, Validators.required],\n          quality: [{value: this.qualityEstimate.quality, disabled: true}, Validators.required],\n          exportPercentage: [{value: this.qualityEstimate.exportPercentage, disabled: true}, [\n            Validators.required,\n            Validators.max(100),\n            Validators.min(0)\n          ]],\n          temp: [1]\n        }),\n        calibers: this.formBuilder.array([])\n      }, {validator: this.validateCalibers});\n    } else {\n      this.qualityForm = this.formBuilder.group({\n        quality: this.formBuilder.group({\n          id: [0, Validators.required],\n          costCenter: [this.costCenter.id, Validators.required],\n          user: [this.userCompany.user, Validators.required],\n          quality: [this.previous ? this.previous.quality : '', Validators.required],\n          exportPercentage: [this.previous ? this.previous.exportPercentage : '', [\n            Validators.required,\n            Validators.max(100),\n            Validators.min(0)\n          ]],\n          temp: [1]\n        }),\n        calibers: this.formBuilder.array([])\n      }, {validator: this.validateCalibers});\n    }\n\n    this.loadCalibers();\n  }\n\n  /**\n   * closeModal\n   */\n  public closeModal = (status: boolean = false) => {\n    this.qualityForm.reset();\n    this.modalController.dismiss(status);\n  }\n\n  /**\n   * submit\n   */\n  public submit = () => {\n    if (this.qualityForm.valid && !this.isSaving) {\n      this.isSaving = true;\n      delete this.costCenter.active;\n\n      const data = Object.assign({}, this.qualityForm.value, {\n        costCenter: this.costCenter\n      });\n\n      data.calibers = data.calibers.map(caliber => Object.assign({}, caliber, {\n        percentage: caliber.percentage === '' ? 0 : caliber.percentage\n      })).filter(caliber => caliber.percentage > 0);\n\n      this.storeQuality(data);\n    } else {\n      this.isSaving = false;\n    }\n  }\n\n  /**\n   * getCaliberName\n   * @param item\n   */\n  public getCaliberName = (item: any) => {\n    const caliber = this.calibers.find((caliber: Caliber) => caliber.id === item.get('caliber').value);\n    return caliber ? caliber.name : 'NOMBRE CALIBRE';\n  }\n\n  /**\n   * validateCalibers\n   * @param form\n   */\n  public validateCalibers = (form: FormGroup) => {\n    const items = form.get('calibers') as FormArray;\n\n    let accum = 0;\n    for (const item of items.controls) {\n      const percentage = item.get('percentage').value ? item.get('percentage').value : 0;\n      if (percentage) {\n        accum = accum + percentage;\n      }\n    }\n\n    return accum < 100 || accum > 100 ? {wrongPercentage: true} : null;\n  }\n\n  /**\n   * getTotal\n   */\n  public getTotal = () => {\n    const items = this.qualityForm.get('calibers') as FormArray;\n\n    let accum = 0;\n    for (const item of items.controls) {\n      const percentage = item.get('percentage').value ? item.get('percentage').value : 0;\n      if (percentage && percentage > 0) {\n        accum = accum + percentage;\n      }\n    }\n\n    return accum;\n  }\n\n  /**\n   * getSelectedQuality\n   */\n  public getSelectedQuality = () => {\n    if (this.qualities) {\n      const id = this.qualityForm.get('quality.quality').value;\n      const find = this.qualities.find(item => item.id === id);\n      return find ? find.name : '';\n    }\n\n    return '';\n  }\n\n  /**\n   * loadCalibers\n   */\n  private loadCalibers = () => {\n    this.calibers = this.storeService.getCalibers();\n    this.qualities = this.storeService.getQualities();\n    this.filteredCalibers = this.calibers.filter((item: any) => item.species === this.costCenter.species);\n\n    const items = this.qualityForm.get('calibers') as FormArray;\n\n    for (const item of this.filteredCalibers) {\n      let find = null;\n      if (this.qualityEstimateDetail) {\n        find = this.qualityEstimateDetail.find(detail => detail.caliber === item.id);\n      }\n\n      const newCaliber = this.formBuilder.group({\n        id: [find ? find.id : 0, Validators.required],\n        quality: [find ? find.qualityEstimate : 0, Validators.required],\n        caliber: [item.id, Validators.required],\n        percentage: [{value: find ? find.value : '', disabled: this.isView}, [\n          Validators.max(100),\n          Validators.min(0)\n        ]],\n        temp: [1]\n      });\n      items.push(newCaliber);\n    }\n  }\n\n  /**\n   * storeQuality\n   * @param data\n   */\n  private storeQuality(data: any) {\n    this.loaderService.startLoader('Guardando estimacion...');\n    this.contractDetailService.storeQuality(data).subscribe(success => {\n      this.isSaving = false;\n      this.loaderService.stopLoader();\n      this.closeModal(true);\n    }, error => {\n      this.isSaving = false;\n      this.loaderService.stopLoader();\n      this.httpService.errorHandler(error);\n    });\n  }\n\n}\n\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {QualityEstimatePage} from './quality-estimate.page';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {QualityEstimateFormComponent} from './quality-estimate-form/quality-estimate-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QualityEstimatePage\n  }\n];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    QualityEstimatePage,\n    QualityEstimateFormComponent\n  ],\n  entryComponents: [\n    QualityEstimateFormComponent\n  ]\n})\nexport class QualityEstimatePageModule {\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9wbGFubmluZy9xdWFsaXR5LWVzdGltYXRlL3F1YWxpdHktZXN0aW1hdGUucGFnZS5zY3NzIn0= */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {ContractDetailService} from '../services/contract-detail/contract-detail.service';\nimport {CostCenter, QualityDetail, QualityEstimate} from '@primetec/primetec-angular';\nimport {ModalController} from '@ionic/angular';\nimport {QualityEstimateFormComponent} from './quality-estimate-form/quality-estimate-form.component';\nimport {HttpService} from '../../../shared/services/http/http.service';\nimport {LoaderService} from '../../../shared/services/loader/loader.service';\nimport {AlertService} from '../../../shared/services/alert/alert.service';\nimport {Subscription} from 'rxjs';\nimport {NetworkService} from '../../../shared/services/network/network.service';\nimport {StoreService} from '../../../shared/services/store/store.service';\n\n@Component({\n  selector: 'app-quality-estimate',\n  templateUrl: './quality-estimate.page.html',\n  styleUrls: ['./quality-estimate.page.scss'],\n})\nexport class QualityEstimatePage implements OnInit, OnDestroy {\n\n  public filteredQualityEstimate: Array<QualityEstimate>;\n  public costCenter: CostCenter;\n  public isOnline: boolean;\n  private qualityEstimate: Array<QualityEstimate>;\n  private qualityEstimateDetail: Array<QualityDetail>;\n  private currentUrl: string;\n  private isOnline$: Subscription;\n  private router$: Subscription;\n  private store$: Subscription;\n\n  constructor(\n    private router: Router,\n    private contractDetailService: ContractDetailService,\n    private modalController: ModalController,\n    private alertService: AlertService,\n    private httpService: HttpService,\n    private loaderService: LoaderService,\n    private networkService: NetworkService,\n    private storeService: StoreService\n  ) {\n    this.isOnline$ = this.networkService.getNetworkStatus().subscribe(status => {\n      this.isOnline = status;\n    });\n  }\n\n  ngOnInit() {\n    this.router$ = this.router.events.subscribe((route) => {\n      if (route instanceof NavigationEnd) {\n        this.currentUrl = route.url;\n      }\n    });\n\n    this.store$ = this.storeService.stateChanged.subscribe(data => {\n      this.costCenter = this.storeService.getCostCenter();\n      this.qualityEstimate = this.storeService.getQualityEstimate();\n      this.filteredQualityEstimate = this.storeService.getQualityEstimate();\n      this.qualityEstimateDetail = this.storeService.getQualityEstimateDetail();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.isOnline$.unsubscribe();\n    this.router$.unsubscribe();\n    this.store$.unsubscribe();\n  }\n\n  /**\n   * checkButton\n   */\n  public checkButton = () => {\n    return this.currentUrl === '/home-page/quality-estimate';\n  }\n\n  /**\n   * openForm\n   */\n  public openForm = async (qualityEstimate: QualityEstimate = null) => {\n    const modal = await this.modalController.create({\n      component: QualityEstimateFormComponent,\n      componentProps: {\n        costCenter: this.costCenter,\n        qualityEstimate,\n        qualityEstimateDetail: qualityEstimate ? this.qualityEstimateDetail.filter(item => item.qualityEstimate === qualityEstimate.id) : [],\n        isView: qualityEstimate !== null,\n        previous: this.qualityEstimate.length > 0 ? this.qualityEstimate[0] : null\n      },\n      backdropDismiss: false,\n      keyboardClose: false,\n      cssClass: 'full-screen-modal'\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data.data) {\n        this.reloadList();\n      }\n    });\n\n    return await modal.present();\n  }\n\n  /**\n   * searchQuality\n   * @param search\n   */\n  public searchQuality = (search: string) => {\n    if (search) {\n      this.filteredQualityEstimate = this.qualityEstimate.filter(item => {\n        return (\n          item.userName.toLowerCase().includes(search.toLowerCase()) ||\n          item.qualityName.toLowerCase().includes(search.toLowerCase()) ||\n          item.exportPercentage === parseInt(search, 10)\n        );\n      });\n    } else {\n      this.filteredQualityEstimate = this.qualityEstimate;\n    }\n  }\n\n  /**\n   * cancelSearch\n   */\n  public cancelSearch = () => {\n    this.filteredQualityEstimate = this.qualityEstimate;\n  }\n\n  /**\n   * viewQuality\n   * @param qualityEstimate\n   */\n  public viewQuality = async (qualityEstimate: QualityEstimate) => {\n    await this.openForm(qualityEstimate);\n  }\n\n  /**\n   * deleteQuality\n   * @param qualityEstimate\n   */\n  public deleteQuality = async (qualityEstimate: QualityEstimate) => {\n    const response = await this.alertService.confirmAlert('Desea borrar esta estimacion de calidad?');\n\n    if (response) {\n      const newQuality = Object.assign({}, qualityEstimate, {id: -qualityEstimate.id});\n      delete this.costCenter.active;\n      const data = {\n        costCenter: this.costCenter,\n        quality: newQuality\n      };\n\n      this.storeQuality(data);\n    }\n  }\n\n  /**\n   * reloadList\n   */\n  public reloadList = () => {\n    this.loaderService.startLoader('Cargando estimaciones de calidad');\n    this.contractDetailService.getCostCenterDetail(this.costCenter.id.toString()).subscribe((success: any) => {\n      this.storeService.setContractData(success.data);\n      this.loaderService.stopLoader();\n    }, error => {\n      this.loaderService.stopLoader();\n    });\n  }\n\n  /**\n   * getItemDetails\n   * @param id\n   */\n  public getItemDetails = (id: number) => {\n    return this.qualityEstimateDetail.filter(item => item.qualityEstimate === id);\n  }\n\n  /**\n   * storeQuality\n   * @param data\n   */\n  private storeQuality = (data: any) => {\n    this.loaderService.startLoader('Borrando estimacion de calidad');\n    this.contractDetailService.storeQuality(data).subscribe(success => {\n      this.reloadList();\n      this.loaderService.stopLoader();\n    }, error => {\n      this.loaderService.stopLoader();\n      this.httpService.errorHandler(error);\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}