{"version":3,"sources":["src/app/home-page/planning/quality-estimate/quality-estimate-form/quality-estimate-form.component.html","src/app/home-page/planning/quality-estimate/quality-estimate.page.html","src/app/home-page/planning/quality-estimate/quality-estimate-form/quality-estimate-form.component.scss","src/app/home-page/planning/quality-estimate/quality-estimate-form/quality-estimate-form.component.ts","src/app/home-page/planning/quality-estimate/quality-estimate.module.ts","src/app/home-page/planning/quality-estimate/quality-estimate.page.scss","src/app/home-page/planning/quality-estimate/quality-estimate.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\" color=\\\"secondary\\\">\\n        <ion-icon name=\\\"arrow-back\\\" slot=\\\"icon-only\\\" style=\\\"color:white;\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ qualityEstimate ? 'Ver' : 'Registrar' }} Calidad</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"qualityForm\\\">\\n    <ng-container formGroupName=\\\"quality\\\">\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">Calidad</ion-label>\\n        <ion-select [interfaceOptions]=\\\"customActionSheetOptions\\\" [selectedText]=\\\"getSelectedQuality()\\\" cancelText=\\\"Cancelar\\\" formControlName=\\\"quality\\\" interface=\\\"action-sheet\\\">\\n          <ion-select-option *ngFor=\\\"let q of qualities\\\" [value]=\\\"q.id\\\">\\n            {{ q.name }}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ng-container *ngIf=\\\"qualityForm.get(['quality', 'quality']).hasError('required')\\\">\\n        <span class=\\\"errorMsg\\\">Seleccione la Calidad</span>\\n      </ng-container>\\n\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">% de Exportación</ion-label>\\n        <ion-input clearInput formControlName=\\\"exportPercentage\\\" placeholder=\\\"Ingrese el %\\\" type=\\\"number\\\"></ion-input>\\n      </ion-item>\\n\\n      <ng-container *ngIf=\\\"qualityForm.get(['quality', 'exportPercentage']).hasError('max')\\\">\\n        <span class=\\\"errorMsg\\\">El porcentaje maximo es 100</span>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"qualityForm.get(['quality', 'exportPercentage']).hasError('min')\\\">\\n        <span class=\\\"errorMsg\\\">El porcentaje minimo es 0</span>\\n      </ng-container>\\n\\n    </ng-container>\\n\\n    <ng-container formArrayName=\\\"calibers\\\">\\n      <ion-list>\\n        <ion-list-header>\\n          Datos Calibres\\n        </ion-list-header>\\n\\n        <ng-container *ngFor=\\\"let item of qualityForm.get('calibers')['controls']; let index = index\\\" [formGroupName]=\\\"index.toString()\\\">\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\">{{ getCaliberName(item) }}</ion-label>\\n            <ion-input clearInput formControlName=\\\"percentage\\\" placeholder=\\\"Ingrese el %\\\" type=\\\"number\\\"></ion-input>\\n          </ion-item>\\n          <ng-container *ngIf=\\\"item.get('percentage').hasError('max')\\\">\\n            <span class=\\\"errorMsg\\\">El porcentaje maximo es 100</span>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"item.get('percentage').hasError('min')\\\">\\n            <span class=\\\"errorMsg\\\">El porcentaje minimo es 0</span>\\n          </ng-container>\\n        </ng-container>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\">Total</ion-label>\\n          <ion-input [disabled]=\\\"isView\\\" [ngClass]=\\\"{ 'total-padding': !isView }\\\" [value]=\\\"getTotal()\\\" clearInput readonly=\\\"true\\\" type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n\\n        <ng-container *ngIf=\\\"!isView && qualityForm.hasError('wrongPercentage')\\\">\\n          <span class=\\\"errorMsg\\\">El porcentaje total debe sumar 100%</span>\\n        </ng-container>\\n\\n      </ion-list>\\n    </ng-container>\\n\\n    <br><br>\\n    <ng-container *ngIf=\\\"!qualityEstimate\\\">\\n      <ion-button (click)=\\\"submit()\\\" [disabled]=\\\"qualityForm.invalid || isSaving\\\" color=\\\"primary\\\" expand=\\\"block\\\">\\n        Guardar\\n      </ion-button>\\n    </ng-container>\\n\\n  </form>\\n</ion-content>\\n\"","export default \"<ion-header>\\n  <ion-toolbar class=\\\"background-color-header\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button class=\\\"white\\\" text=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"white\\\">\\n      <strong>Estimación de Calidad</strong>\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-notifications></app-notifications>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-searchbar\\n  placeholder=\\\"Buscar...\\\"\\n  (ionChange)=\\\"searchQuality($event.target.value)\\\"\\n  (ionClear)=\\\"cancelSearch()\\\"\\n  animated\\n  class=\\\"production\\\"\\n  showCancelButton=\\\"never\\\">\\n</ion-searchbar>\\n\\n<ion-content class=\\\"content\\\">\\n\\n  <ng-container *ngFor=\\\"let quality of filteredQualityEstimate; let index = index\\\">\\n    <div class=\\\"card-sli\\\">\\n      <div class=\\\"card-sli-back\\\">\\n        <app-quality-estimate-item\\n          (itemDelete)=\\\"deleteQuality(quality)\\\"\\n          (itemSelected)=\\\"viewQuality(quality)\\\"\\n          [costCenter]=\\\"costCenter\\\"\\n          [details]=\\\"getItemDetails(quality.id)\\\"\\n          [isOld]=\\\"index > 0 \\\"\\n          [item]=\\\"quality\\\"\\n          [slideDisabled]=\\\"false\\\">\\n        </app-quality-estimate-item>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"checkButton()\\\">\\n    <ion-fab horizontal=\\\"end\\\" slot=\\\"fixed\\\" vertical=\\\"bottom\\\">\\n      <ion-fab-button (click)=\\\"openForm()\\\" [disabled]=\\\"!costCenter || !isOnline\\\" color=\\\"success\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-fab>\\n  </ng-container>\\n\\n</ion-content>\\n\"","export default \".errorMsg {\\n  color: red;\\n  padding-left: 15px;\\n}\\n\\nion-item ion-label {\\n  min-width: 50%;\\n}\\n\\nion-item ion-input {\\n  text-align: right;\\n}\\n\\n.total-padding {\\n  --padding-end: 37px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWlzY29udHJlcmFzL1ByaW1ldGVjL2Z4MTEvZngxMV9tb2JpbGUvc3JjL2FwcC9ob21lLXBhZ2UvcGxhbm5pbmcvcXVhbGl0eS1lc3RpbWF0ZS9xdWFsaXR5LWVzdGltYXRlLWZvcm0vcXVhbGl0eS1lc3RpbWF0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ob21lLXBhZ2UvcGxhbm5pbmcvcXVhbGl0eS1lc3RpbWF0ZS9xdWFsaXR5LWVzdGltYXRlLWZvcm0vcXVhbGl0eS1lc3RpbWF0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGtCQUFBO0FDQ0Y7O0FER0U7RUFDRSxjQUFBO0FDQUo7O0FER0U7RUFDRSxpQkFBQTtBQ0RKOztBREtBO0VBQ0UsbUJBQUE7QUNGRiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9wbGFubmluZy9xdWFsaXR5LWVzdGltYXRlL3F1YWxpdHktZXN0aW1hdGUtZm9ybS9xdWFsaXR5LWVzdGltYXRlLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3JNc2cge1xuICBjb2xvcjogcmVkO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG5cbmlvbi1pdGVtIHtcbiAgaW9uLWxhYmVsIHtcbiAgICBtaW4td2lkdGg6IDUwJTtcbiAgfVxuXG4gIGlvbi1pbnB1dCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbn1cblxuLnRvdGFsLXBhZGRpbmcge1xuICAtLXBhZGRpbmctZW5kOiAzN3B4O1xufVxuIiwiLmVycm9yTXNnIHtcbiAgY29sb3I6IHJlZDtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufVxuXG5pb24taXRlbSBpb24tbGFiZWwge1xuICBtaW4td2lkdGg6IDUwJTtcbn1cbmlvbi1pdGVtIGlvbi1pbnB1dCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4udG90YWwtcGFkZGluZyB7XG4gIC0tcGFkZGluZy1lbmQ6IDM3cHg7XG59Il19 */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Caliber, CostCenter, Generic, QualityDetail, QualityEstimate} from '@primetec/primetec-angular';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ModalController} from '@ionic/angular';\nimport {AuthService} from '../../../../shared/services/auth/auth.service';\nimport {ContractDetailService} from '../../services/contract-detail/contract-detail.service';\nimport {SyncService} from '../../../../shared/services/sync/sync.service';\nimport {ToastService} from '../../../../shared/services/toast/toast.service';\nimport {HttpService} from '../../../../shared/services/http/http.service';\nimport {LoaderService} from '../../../../shared/services/loader/loader.service';\nimport {StoreService} from '../../../../shared/services/store/store.service';\n\n@Component({\n  selector: 'app-quality-estimate-form',\n  templateUrl: './quality-estimate-form.component.html',\n  styleUrls: ['./quality-estimate-form.component.scss'],\n})\nexport class QualityEstimateFormComponent implements OnInit {\n\n  @Input() costCenter: CostCenter;\n  @Input() qualityEstimate: QualityEstimate;\n  @Input() qualityEstimateDetail: Array<QualityDetail>;\n  @Input() isView: boolean;\n  @Input() previous: QualityEstimate;\n\n  public readonly customActionSheetOptions: any = {\n    header: 'Calidades',\n    keyboardClose: false,\n    backdropDismiss: false\n  };\n\n  public qualityForm: FormGroup;\n  public isSaving = false;\n  public qualities: Array<Generic>;\n  private userCompany: any;\n  private calibers: Array<Caliber>;\n  private filteredCalibers: Array<Caliber>;\n\n  constructor(\n    private modalController: ModalController,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private contractDetailService: ContractDetailService,\n    private syncService: SyncService,\n    private toastService: ToastService,\n    private httpService: HttpService,\n    private loaderService: LoaderService,\n    private storeService: StoreService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.userCompany = this.storeService.getActiveCompany();\n    if (this.isView) {\n      this.qualityForm = this.formBuilder.group({\n        quality: this.formBuilder.group({\n          id: [this.qualityEstimate.id, Validators.required],\n          costCenter: [this.costCenter.id, Validators.required],\n          user: [this.userCompany.user, Validators.required],\n          quality: [{value: this.qualityEstimate.quality, disabled: true}, Validators.required],\n          exportPercentage: [{value: this.qualityEstimate.exportPercentage, disabled: true}, [\n            Validators.required,\n            Validators.max(100),\n            Validators.min(0)\n          ]],\n          temp: [1]\n        }),\n        calibers: this.formBuilder.array([])\n      }, {validator: this.validateCalibers});\n    } else {\n      this.qualityForm = this.formBuilder.group({\n        quality: this.formBuilder.group({\n          id: [0, Validators.required],\n          costCenter: [this.costCenter.id, Validators.required],\n          user: [this.userCompany.user, Validators.required],\n          quality: [this.previous ? this.previous.quality : '', Validators.required],\n          exportPercentage: [this.previous ? this.previous.exportPercentage : '', [\n            Validators.required,\n            Validators.max(100),\n            Validators.min(0)\n          ]],\n          temp: [1]\n        }),\n        calibers: this.formBuilder.array([])\n      }, {validator: this.validateCalibers});\n    }\n\n    this.loadCalibers();\n  }\n\n  /**\n   * closeModal\n   */\n  public closeModal = (status: boolean = false) => {\n    this.qualityForm.reset();\n    this.modalController.dismiss(status);\n  }\n\n  /**\n   * submit\n   */\n  public submit = () => {\n    if (this.qualityForm.valid && !this.isSaving) {\n      this.isSaving = true;\n      delete this.costCenter.active;\n\n      const data = Object.assign({}, this.qualityForm.value, {\n        costCenter: this.costCenter\n      });\n\n      data.calibers = data.calibers.map(caliber => Object.assign({}, caliber, {\n        percentage: caliber.percentage === '' ? 0 : caliber.percentage\n      })).filter(caliber => caliber.percentage > 0);\n\n      this.storeQuality(data);\n    } else {\n      this.isSaving = false;\n    }\n  }\n\n  /**\n   * getCaliberName\n   * @param item\n   */\n  public getCaliberName = (item: any) => {\n    const caliber = this.calibers.find((caliber: Caliber) => caliber.id === item.get('caliber').value);\n    return caliber ? caliber.name : 'NOMBRE CALIBRE';\n  }\n\n  /**\n   * validateCalibers\n   * @param form\n   */\n  public validateCalibers = (form: FormGroup) => {\n    const items = form.get('calibers') as FormArray;\n\n    let accum = 0;\n    for (const item of items.controls) {\n      const percentage = item.get('percentage').value ? item.get('percentage').value : 0;\n      if (percentage) {\n        accum = accum + percentage;\n      }\n    }\n\n    return accum < 100 || accum > 100 ? {wrongPercentage: true} : null;\n  }\n\n  /**\n   * getTotal\n   */\n  public getTotal = () => {\n    const items = this.qualityForm.get('calibers') as FormArray;\n\n    let accum = 0;\n    for (const item of items.controls) {\n      const percentage = item.get('percentage').value ? item.get('percentage').value : 0;\n      if (percentage && percentage > 0) {\n        accum = accum + percentage;\n      }\n    }\n\n    return accum;\n  }\n\n  /**\n   * getSelectedQuality\n   */\n  public getSelectedQuality = () => {\n    if (this.qualities) {\n      const id = this.qualityForm.get('quality.quality').value;\n      const find = this.qualities.find(item => item.id === id);\n      return find ? find.name : '';\n    }\n\n    return '';\n  }\n\n  /**\n   * loadCalibers\n   */\n  private loadCalibers = () => {\n    this.calibers = this.storeService.getCalibers();\n    this.qualities = this.storeService.getQualities();\n    this.filteredCalibers = this.calibers.filter((item: any) => item.species === this.costCenter.species);\n\n    const items = this.qualityForm.get('calibers') as FormArray;\n\n    for (const item of this.filteredCalibers) {\n      let find = null;\n      if (this.qualityEstimateDetail) {\n        find = this.qualityEstimateDetail.find(detail => detail.caliber === item.id);\n      }\n\n      const newCaliber = this.formBuilder.group({\n        id: [find ? find.id : 0, Validators.required],\n        quality: [find ? find.qualityEstimate : 0, Validators.required],\n        caliber: [item.id, Validators.required],\n        percentage: [{value: find ? find.value : '', disabled: this.isView}, [\n          Validators.max(100),\n          Validators.min(0)\n        ]],\n        temp: [1]\n      });\n      items.push(newCaliber);\n    }\n  }\n\n  /**\n   * storeQuality\n   * @param data\n   */\n  private storeQuality(data: any) {\n    this.loaderService.startLoader('Guardando estimacion...');\n    this.contractDetailService.storeQuality(data).subscribe(success => {\n      this.isSaving = false;\n      this.loaderService.stopLoader();\n      this.closeModal(true);\n    }, error => {\n      this.isSaving = false;\n      this.loaderService.stopLoader();\n      this.httpService.errorHandler(error);\n    });\n  }\n\n}\n\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {QualityEstimatePage} from './quality-estimate.page';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {QualityEstimateFormComponent} from './quality-estimate-form/quality-estimate-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QualityEstimatePage\n  }\n];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    QualityEstimatePage,\n    QualityEstimateFormComponent\n  ],\n  entryComponents: [\n    QualityEstimateFormComponent\n  ]\n})\nexport class QualityEstimatePageModule {\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9wbGFubmluZy9xdWFsaXR5LWVzdGltYXRlL3F1YWxpdHktZXN0aW1hdGUucGFnZS5zY3NzIn0= */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {ContractDetailService} from '../services/contract-detail/contract-detail.service';\nimport {CostCenter, QualityDetail, QualityEstimate} from '@primetec/primetec-angular';\nimport {ModalController} from '@ionic/angular';\nimport {QualityEstimateFormComponent} from './quality-estimate-form/quality-estimate-form.component';\nimport {HttpService} from '../../../shared/services/http/http.service';\nimport {LoaderService} from '../../../shared/services/loader/loader.service';\nimport {AlertService} from '../../../shared/services/alert/alert.service';\nimport {Subscription} from 'rxjs';\nimport {NetworkService} from '../../../shared/services/network/network.service';\nimport {StoreService} from '../../../shared/services/store/store.service';\n\n@Component({\n  selector: 'app-quality-estimate',\n  templateUrl: './quality-estimate.page.html',\n  styleUrls: ['./quality-estimate.page.scss'],\n})\nexport class QualityEstimatePage implements OnInit, OnDestroy {\n\n  public filteredQualityEstimate: Array<QualityEstimate>;\n  public costCenter: CostCenter;\n  public isOnline: boolean;\n  private qualityEstimate: Array<QualityEstimate>;\n  private qualityEstimateDetail: Array<QualityDetail>;\n  private currentUrl: string;\n  private isOnline$: Subscription;\n  private router$: Subscription;\n  private store$: Subscription;\n\n  constructor(\n    private router: Router,\n    private contractDetailService: ContractDetailService,\n    private modalController: ModalController,\n    private alertService: AlertService,\n    private httpService: HttpService,\n    private loaderService: LoaderService,\n    private networkService: NetworkService,\n    private storeService: StoreService\n  ) {\n    this.isOnline$ = this.networkService.getNetworkStatus().subscribe(status => {\n      this.isOnline = status;\n    });\n  }\n\n  ngOnInit() {\n    this.router$ = this.router.events.subscribe((route) => {\n      if (route instanceof NavigationEnd) {\n        this.currentUrl = route.url;\n      }\n    });\n\n    this.store$ = this.storeService.stateChanged.subscribe(data => {\n      this.costCenter = this.storeService.getCostCenter();\n      this.qualityEstimate = this.storeService.getQualityEstimate();\n      this.filteredQualityEstimate = this.storeService.getQualityEstimate();\n      this.qualityEstimateDetail = this.storeService.getQualityEstimateDetail();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.isOnline$.unsubscribe();\n    this.router$.unsubscribe();\n    this.store$.unsubscribe();\n  }\n\n  /**\n   * checkButton\n   */\n  public checkButton = () => {\n    return this.currentUrl === '/home-page/quality-estimate';\n  }\n\n  /**\n   * openForm\n   */\n  public openForm = async (qualityEstimate: QualityEstimate = null) => {\n    const modal = await this.modalController.create({\n      component: QualityEstimateFormComponent,\n      componentProps: {\n        costCenter: this.costCenter,\n        qualityEstimate,\n        qualityEstimateDetail: qualityEstimate ? this.qualityEstimateDetail.filter(item => item.qualityEstimate === qualityEstimate.id) : [],\n        isView: qualityEstimate !== null,\n        previous: this.qualityEstimate.length > 0 ? this.qualityEstimate[0] : null\n      },\n      backdropDismiss: false,\n      keyboardClose: false,\n      cssClass: 'full-screen-modal'\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data.data) {\n        this.reloadList();\n      }\n    });\n\n    return await modal.present();\n  }\n\n  /**\n   * searchQuality\n   * @param search\n   */\n  public searchQuality = (search: string) => {\n    if (search) {\n      this.filteredQualityEstimate = this.qualityEstimate.filter(item => {\n        return (\n          item.userName.toLowerCase().includes(search.toLowerCase()) ||\n          item.qualityName.toLowerCase().includes(search.toLowerCase()) ||\n          item.exportPercentage === parseInt(search, 10)\n        );\n      });\n    } else {\n      this.filteredQualityEstimate = this.qualityEstimate;\n    }\n  }\n\n  /**\n   * cancelSearch\n   */\n  public cancelSearch = () => {\n    this.filteredQualityEstimate = this.qualityEstimate;\n  }\n\n  /**\n   * viewQuality\n   * @param qualityEstimate\n   */\n  public viewQuality = async (qualityEstimate: QualityEstimate) => {\n    await this.openForm(qualityEstimate);\n  }\n\n  /**\n   * deleteQuality\n   * @param qualityEstimate\n   */\n  public deleteQuality = async (qualityEstimate: QualityEstimate) => {\n    const response = await this.alertService.confirmAlert('Desea borrar esta estimacion de calidad?');\n\n    if (response) {\n      const newQuality = Object.assign({}, qualityEstimate, {id: -qualityEstimate.id});\n      delete this.costCenter.active;\n      const data = {\n        costCenter: this.costCenter,\n        quality: newQuality\n      };\n\n      this.storeQuality(data);\n    }\n  }\n\n  /**\n   * reloadList\n   */\n  public reloadList = () => {\n    this.loaderService.startLoader('Cargando estimaciones de calidad');\n    this.contractDetailService.getCostCenterDetail(this.costCenter.id.toString()).subscribe((success: any) => {\n      this.storeService.setContractData(success.data);\n      this.loaderService.stopLoader();\n    }, error => {\n      this.loaderService.stopLoader();\n    });\n  }\n\n  /**\n   * getItemDetails\n   * @param id\n   */\n  public getItemDetails = (id: number) => {\n    return this.qualityEstimateDetail.filter(item => item.qualityEstimate === id);\n  }\n\n  /**\n   * storeQuality\n   * @param data\n   */\n  private storeQuality = (data: any) => {\n    this.loaderService.startLoader('Borrando estimacion de calidad');\n    this.contractDetailService.storeQuality(data).subscribe(success => {\n      this.reloadList();\n      this.loaderService.stopLoader();\n    }, error => {\n      this.loaderService.stopLoader();\n      this.httpService.errorHandler(error);\n    });\n  }\n}\n"],"sourceRoot":"webpack:///","file":"planning-quality-estimate-quality-estimate-module-es5.js"}