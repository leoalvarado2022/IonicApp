{"version":3,"sources":["./src/app/modules/auth/pages/register/register.page.html","./src/app/modules/auth/pages/register/register.module.ts","./src/app/modules/auth/pages/register/register.page.scss","./src/app/modules/auth/pages/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n  <br>\\n  <div *ngIf=\\\"device.cordova\\\">\\n    <ion-avatar class=\\\"ion-no-margin\\\" style=\\\"margin: 0 auto !important\\\">\\n      <img [src]=\\\"avatarPreview || 'assets/imgs/user.png'\\\">\\n    </ion-avatar>\\n  </div>\\n\\n  <br><br><br>\\n  <ng-container *ngIf=\\\"device.cordova\\\">\\n    <ion-item>\\n      <ion-button (click)=\\\"openCamera()\\\" slot=\\\"start\\\">\\n        <ion-icon name=\\\"camera\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n      <ion-label>&nbsp;</ion-label>\\n      <ion-button (click)=\\\"openGallery()\\\" slot=\\\"end\\\">\\n        <ion-icon name=\\\"image\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ng-container>\\n\\n  <div>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"registerForm\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Rut</ion-label>\\n        <ion-input (keyup)=\\\"formatIdentifier($event.target.value)\\\" formControlName=\\\"rut\\\" tabindex=\\\"0\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('rut').dirty && registerForm.get('rut').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('rut').hasError('required')\\\" style=\\\"color: red\\\">El rut es requerido.</span>\\n          <span *ngIf=\\\"registerForm.get('rut').hasError('validRut')\\\" style=\\\"color: red\\\">El rut es inválido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Nombres</ion-label>\\n        <ion-input formControlName=\\\"names\\\" tabindex=\\\"1\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('names').dirty && registerForm.get('names').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('names').hasError('required')\\\" style=\\\"color: red\\\">Los nombres son requeridos.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Apellido Paterno</ion-label>\\n        <ion-input formControlName=\\\"lastName\\\" tabindex=\\\"2\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('lastName').dirty && registerForm.get('lastName').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('lastName').hasError('required')\\\" style=\\\"color: red\\\">El apellido parterno es requerido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Apellido Materno</ion-label>\\n        <ion-input class=\\\"input-text\\\" formControlName=\\\"surName\\\" tabindex=\\\"3\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('surName').dirty && registerForm.get('surName').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('surName').hasError('required')\\\" style=\\\"color: red\\\">El apellido materno es requerido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input formControlName=\\\"email\\\" tabindex=\\\"4\\\" type=\\\"email\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('email').dirty && registerForm.get('email').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('email').hasError('required')\\\" style=\\\"color: red\\\">El correo es requerido.</span>\\n          <span *ngIf=\\\"registerForm.get('email').hasError('email')\\\" style=\\\"color: red\\\">Ingrese un email valido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Telefono</ion-label>\\n        <ion-input formControlName=\\\"phone\\\" tabindex=\\\"5\\\" type=\\\"tel\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('phone').dirty && registerForm.get('phone').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('phone').hasError('required')\\\" style=\\\"color: red\\\">El telefono es requerido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Contraseña</ion-label>\\n        <ion-input formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('password').dirty && registerForm.get('password').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('password').hasError('required')\\\" style=\\\"color: red\\\">La contraseña es requerida.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Confirmar Contraseña</ion-label>\\n        <ion-input formControlName=\\\"confirm\\\" tabindex=\\\"7\\\" type=\\\"password\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('confirm').dirty && registerForm.get('confirm').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('confirm').hasError('required')\\\" style=\\\"color: red\\\">Debe confirmar la contraseña.</span>\\n          <span *ngIf=\\\"registerForm.get('confirm').hasError('notSame')\\\" style=\\\"color: red\\\">Las contraseñas no son iguales.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <br>\\n      <ion-radio-group formControlName=\\\"access\\\">\\n        <ion-list-header>\\n          Tipo de Acceso\\n        </ion-list-header>\\n\\n        <ion-item>\\n          <ion-label>Rut</ion-label>\\n          <ion-radio value=\\\"1\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Correo</ion-label>\\n          <ion-radio value=\\\"2\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n\\n      <ng-container *ngIf=\\\"registerForm.get('access').errors\\\">\\n        <span *ngIf=\\\"registerForm.get('access').hasError('required')\\\" style=\\\"color: red\\\">Debe seleccionar una opción.</span>\\n      </ng-container>\\n\\n      <br><br>\\n      <ion-button\\n        [disabled]=\\\"registerForm.invalid\\\"\\n        color=\\\"danger\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\">\\n        Registrar\\n      </ion-button>\\n    </form>\\n  </div>\\n\\n</ion-content>\\n\"","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {RegisterPage} from './register.page';\nimport {SharedModule} from '../../../../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {\n}\n","export default \".cameras {\\n  font-size: 40px;\\n  text-align: center;\\n}\\n\\nion-avatar {\\n  width: 100px;\\n}\\n\\nion-avatar img {\\n  height: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWlzY29udHJlcmFzL1ByaW1ldGVjL2Z4MTEvZngxMV9tb2JpbGUvc3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0FDQ0Y7O0FEQ0U7RUFDRSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhbWVyYXMge1xuICBmb250LXNpemU6IDQwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaW9uLWF2YXRhciB7XG4gIHdpZHRoOiAxMDBweDtcblxuICBpbWcge1xuICAgIGhlaWdodDogMTAwcHg7XG4gIH1cbn1cbiIsIi5jYW1lcmFzIHtcbiAgZm9udC1zaXplOiA0MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmlvbi1hdmF0YXIge1xuICB3aWR0aDogMTAwcHg7XG59XG5pb24tYXZhdGFyIGltZyB7XG4gIGhlaWdodDogMTAwcHg7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {confirmPassword} from '../../../../validators/confirm-password.validator';\nimport {UserService} from '../../../../shared/services/user/user.service';\nimport {LoaderService} from '../../../../shared/services/loader/loader.service';\nimport {ToastService} from '../../../../shared/services/toast/toast.service';\nimport {AuthService} from '../../../../shared/services/auth/auth.service';\nimport {Router} from '@angular/router';\nimport {cleanRut, formatRut, ValidateRut} from '@primetec/primetec-angular';\nimport {HttpService} from '../../../../shared/services/http/http.service';\nimport {Device} from '@ionic-native/device/ngx';\nimport {CameraService} from '../../../../shared/services/camera/camera.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  public registerForm: FormGroup;\n  public avatarPreview: any = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private loaderService: LoaderService,\n    private toastService: ToastService,\n    private router: Router,\n    private authService: AuthService,\n    private httpService: HttpService,\n    public device: Device,\n    private cameraService: CameraService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      names: ['', Validators.required],\n      lastName: ['', Validators.required],\n      surName: ['', Validators.required],\n      rut: ['', [\n        Validators.required,\n        ValidateRut\n      ]],\n      phone: ['+569', [\n        Validators.required,\n        // Validators.pattern('^(([+569])([0-9]{11}))$')\n      ]\n      ],\n      password: ['', Validators.required],\n      confirm: ['', Validators.required],\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]],\n      avatar: [''],\n      access: ['1', Validators.required],\n    }, {validator: confirmPassword});\n  }\n\n  /**\n   * onSubmit\n   */\n  public async onSubmit() {\n    const data = Object.assign({}, this.registerForm.value);\n    await this.create(data);\n  }\n\n  /**\n   * formatIdentifier\n   * @param identifier\n   */\n  public formatIdentifier = (rut: string) => {\n\n    if (rut.length > 0) {\n      this.registerForm.patchValue({\n        rut: formatRut(rut)\n      });\n    } else {\n      this.registerForm.patchValue({\n        rut: cleanRut(rut)\n      });\n    }\n\n    return rut;\n  }\n\n  /**\n   * openCamera\n   */\n  public openCamera = async () => {\n    const image = await this.cameraService.openCamera();\n\n    if (image) {\n      this.getImage(image);\n    }\n  }\n\n  /**\n   * openGallery\n   */\n  public openGallery = async () => {\n    const image = await this.cameraService.openGallery();\n\n    if (image) {\n      this.getImage(image);\n    }\n  }\n\n  /**\n   * create\n   * @param data\n   */\n  private async create(data): Promise<any> {\n    await this.loaderService.startLoader();\n    return new Promise((resolve, reject) => {\n      this.userService.createUser(data).subscribe(success => {\n        this.toastService.successToast('Se creo el usuario correctamente, inicia sesión');\n        this.loaderService.stopLoader();\n        this.registerForm.reset();\n        this.router.navigate(['auth/login']);\n        resolve(true);\n      }, error => {\n        this.loaderService.stopLoader();\n        this.httpService.errorHandler(error);\n        resolve(false);\n      });\n    });\n  }\n\n  /**\n   * getImage\n   * @param image\n   */\n  private getImage = (image: string) => {\n    const imageUrl = image;\n    this.avatarPreview = `data:image/jpeg;base64,${image}`;\n\n    this.registerForm.patchValue({\n      avatar: imageUrl\n    });\n\n    this.registerForm.updateValueAndValidity();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}