{"version":3,"sources":["src/app/modules/auth/pages/register/register.page.html","src/app/modules/auth/pages/register/register.module.ts","src/app/modules/auth/pages/register/register.page.scss","src/app/modules/auth/pages/register/register.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content>\\n  <br>\\n  <div *ngIf=\\\"device.cordova\\\">\\n    <ion-avatar class=\\\"ion-no-margin\\\" style=\\\"margin: 0 auto !important\\\">\\n      <img [src]=\\\"avatarPreview || 'assets/imgs/user.png'\\\">\\n    </ion-avatar>\\n  </div>\\n\\n  <br><br><br>\\n  <ng-container *ngIf=\\\"device.cordova\\\">\\n    <ion-item>\\n      <ion-button (click)=\\\"openCamera()\\\" slot=\\\"start\\\">\\n        <ion-icon name=\\\"camera\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n      <ion-label>&nbsp;</ion-label>\\n      <ion-button (click)=\\\"openGallery()\\\" slot=\\\"end\\\">\\n        <ion-icon name=\\\"image\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ng-container>\\n\\n  <div>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"registerForm\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Rut</ion-label>\\n        <ion-input (keyup)=\\\"formatIdentifier($event.target.value)\\\" formControlName=\\\"rut\\\" tabindex=\\\"0\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('rut').dirty && registerForm.get('rut').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('rut').hasError('required')\\\" style=\\\"color: red\\\">El rut es requerido.</span>\\n          <span *ngIf=\\\"registerForm.get('rut').hasError('validRut')\\\" style=\\\"color: red\\\">El rut es inv치lido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Nombres</ion-label>\\n        <ion-input formControlName=\\\"names\\\" tabindex=\\\"1\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('names').dirty && registerForm.get('names').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('names').hasError('required')\\\" style=\\\"color: red\\\">Los nombres son requeridos.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Apellido Paterno</ion-label>\\n        <ion-input formControlName=\\\"lastName\\\" tabindex=\\\"2\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('lastName').dirty && registerForm.get('lastName').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('lastName').hasError('required')\\\" style=\\\"color: red\\\">El apellido parterno es requerido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Apellido Materno</ion-label>\\n        <ion-input class=\\\"input-text\\\" formControlName=\\\"surName\\\" tabindex=\\\"3\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('surName').dirty && registerForm.get('surName').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('surName').hasError('required')\\\" style=\\\"color: red\\\">El apellido materno es requerido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input formControlName=\\\"email\\\" tabindex=\\\"4\\\" type=\\\"email\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('email').dirty && registerForm.get('email').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('email').hasError('required')\\\" style=\\\"color: red\\\">El correo es requerido.</span>\\n          <span *ngIf=\\\"registerForm.get('email').hasError('email')\\\" style=\\\"color: red\\\">Ingrese un email valido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Telefono</ion-label>\\n        <ion-input formControlName=\\\"phone\\\" tabindex=\\\"5\\\" type=\\\"tel\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('phone').dirty && registerForm.get('phone').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('phone').hasError('required')\\\" style=\\\"color: red\\\">El telefono es requerido.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Contrase침a</ion-label>\\n        <ion-input formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('password').dirty && registerForm.get('password').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('password').hasError('required')\\\" style=\\\"color: red\\\">La contrase침a es requerida.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Confirmar Contrase침a</ion-label>\\n        <ion-input formControlName=\\\"confirm\\\" tabindex=\\\"7\\\" type=\\\"password\\\"></ion-input>\\n        <ng-container *ngIf=\\\"registerForm.get('confirm').dirty && registerForm.get('confirm').errors\\\">\\n          <span *ngIf=\\\"registerForm.get('confirm').hasError('required')\\\" style=\\\"color: red\\\">Debe confirmar la contrase침a.</span>\\n          <span *ngIf=\\\"registerForm.get('confirm').hasError('notSame')\\\" style=\\\"color: red\\\">Las contrase침as no son iguales.</span>\\n        </ng-container>\\n      </ion-item>\\n\\n      <br>\\n      <ion-radio-group formControlName=\\\"access\\\">\\n        <ion-list-header>\\n          Tipo de Acceso\\n        </ion-list-header>\\n\\n        <ion-item>\\n          <ion-label>Rut</ion-label>\\n          <ion-radio value=\\\"1\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Correo</ion-label>\\n          <ion-radio value=\\\"2\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n\\n      <ng-container *ngIf=\\\"registerForm.get('access').errors\\\">\\n        <span *ngIf=\\\"registerForm.get('access').hasError('required')\\\" style=\\\"color: red\\\">Debe seleccionar una opci칩n.</span>\\n      </ng-container>\\n\\n      <br><br>\\n      <ion-button\\n        [disabled]=\\\"registerForm.invalid\\\"\\n        color=\\\"danger\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\">\\n        Registrar\\n      </ion-button>\\n    </form>\\n  </div>\\n\\n</ion-content>\\n\"","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {RegisterPage} from './register.page';\nimport {SharedModule} from '../../../../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {\n}\n","export default \".cameras {\\n  font-size: 40px;\\n  text-align: center;\\n}\\n\\nion-avatar {\\n  width: 100px;\\n}\\n\\nion-avatar img {\\n  height: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWlzY29udHJlcmFzL1ByaW1ldGVjL2Z4MTEvZngxMV9tb2JpbGUvc3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0FDQ0Y7O0FEQ0U7RUFDRSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2F1dGgvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhbWVyYXMge1xuICBmb250LXNpemU6IDQwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaW9uLWF2YXRhciB7XG4gIHdpZHRoOiAxMDBweDtcblxuICBpbWcge1xuICAgIGhlaWdodDogMTAwcHg7XG4gIH1cbn1cbiIsIi5jYW1lcmFzIHtcbiAgZm9udC1zaXplOiA0MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmlvbi1hdmF0YXIge1xuICB3aWR0aDogMTAwcHg7XG59XG5pb24tYXZhdGFyIGltZyB7XG4gIGhlaWdodDogMTAwcHg7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {confirmPassword} from '../../../../validators/confirm-password.validator';\nimport {UserService} from '../../../../shared/services/user/user.service';\nimport {LoaderService} from '../../../../shared/services/loader/loader.service';\nimport {ToastService} from '../../../../shared/services/toast/toast.service';\nimport {AuthService} from '../../../../shared/services/auth/auth.service';\nimport {Router} from '@angular/router';\nimport {cleanRut, formatRut, ValidateRut} from '@primetec/primetec-angular';\nimport {HttpService} from '../../../../shared/services/http/http.service';\nimport {Device} from '@ionic-native/device/ngx';\nimport {CameraService} from '../../../../shared/services/camera/camera.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  public registerForm: FormGroup;\n  public avatarPreview: any = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private loaderService: LoaderService,\n    private toastService: ToastService,\n    private router: Router,\n    private authService: AuthService,\n    private httpService: HttpService,\n    public device: Device,\n    private cameraService: CameraService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      names: ['', Validators.required],\n      lastName: ['', Validators.required],\n      surName: ['', Validators.required],\n      rut: ['', [\n        Validators.required,\n        ValidateRut\n      ]],\n      phone: ['+569', [\n        Validators.required,\n        // Validators.pattern('^(([+569])([0-9]{11}))$')\n      ]\n      ],\n      password: ['', Validators.required],\n      confirm: ['', Validators.required],\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]],\n      avatar: [''],\n      access: ['1', Validators.required],\n    }, {validator: confirmPassword});\n  }\n\n  /**\n   * onSubmit\n   */\n  public async onSubmit() {\n    const data = Object.assign({}, this.registerForm.value);\n    await this.create(data);\n  }\n\n  /**\n   * formatIdentifier\n   * @param identifier\n   */\n  public formatIdentifier = (rut: string) => {\n\n    if (rut.length > 0) {\n      this.registerForm.patchValue({\n        rut: formatRut(rut)\n      });\n    } else {\n      this.registerForm.patchValue({\n        rut: cleanRut(rut)\n      });\n    }\n\n    return rut;\n  }\n\n  /**\n   * openCamera\n   */\n  public openCamera = async () => {\n    const image = await this.cameraService.openCamera();\n\n    if (image) {\n      this.getImage(image);\n    }\n  }\n\n  /**\n   * openGallery\n   */\n  public openGallery = async () => {\n    const image = await this.cameraService.openGallery();\n\n    if (image) {\n      this.getImage(image);\n    }\n  }\n\n  /**\n   * create\n   * @param data\n   */\n  private async create(data): Promise<any> {\n    await this.loaderService.startLoader();\n    return new Promise((resolve, reject) => {\n      this.userService.createUser(data).subscribe(success => {\n        this.toastService.successToast('Se creo el usuario correctamente, inicia sesi칩n');\n        this.loaderService.stopLoader();\n        this.registerForm.reset();\n        this.router.navigate(['auth/login']);\n        resolve(true);\n      }, error => {\n        this.loaderService.stopLoader();\n        this.httpService.errorHandler(error);\n        resolve(false);\n      });\n    });\n  }\n\n  /**\n   * getImage\n   * @param image\n   */\n  private getImage = (image: string) => {\n    const imageUrl = image;\n    this.avatarPreview = `data:image/jpeg;base64,${image}`;\n\n    this.registerForm.patchValue({\n      avatar: imageUrl\n    });\n\n    this.registerForm.updateValueAndValidity();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"register-register-module-es5.js"}